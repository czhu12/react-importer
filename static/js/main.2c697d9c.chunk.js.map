{"version":3,"sources":["../../src/components/Header.jsx","../../src/components/common.jsx","../../src/components/FileUploader.jsx","../../src/components/HeaderMapperRow.jsx","../../src/components/HeaderMapper.jsx","../../src/utils/index.js","../../src/components/DataEditor.jsx","../../src/contexts/index.js","../../src/validators/index.js","../../src/index.js","App.js","index.js"],"names":["TextEnd","styled","BreadcrumbItem","props","css","Aligned","Header","steps","currentStep","id","past","active","last","index","key","xmlns","width","height","fill","className","viewBox","fillRule","d","Container","TextStyled","styles","Root","Card","Align","Margin","Padded","Table","Row","Col","customCss","Button","color","FileUploader","setFile","useDropzone","acceptedFiles","getRootProps","getInputProps","useEffect","style","cursor","backgroundColor","padding","margin","muted","flex","marginRight","marginBottom","right","variant","outline","percentage","a","b","Math","MappingStatistics","fieldStatistics","selectedField","total","counts","errorTypeCounts","HeaderMapperSelection","header","examples","setHeader","selectedHeader","options","verticallyCenter","spaceBetween","isClearable","isSearchable","value","onChange","idx","textAlign","e","HeaderMapperRow","headerMapping","setHeaderMapping","block","isDisabled","onClick","confirmed","ignored","name","display","flexDirection","justifyContent","HeaderMapper","parsed","fields","statistics","headerMappings","setHeaderMappings","missingRequiredFields","onComplete","restart","data","f","label","hasMissingRequiredFields","columnIndex","newMappings","danger","bold","marginLeft","isPresent","isUndefinedOrNull","filterEmptyRows","formattedData","Object","k","fieldIsRequired","field","v","buildFinalData","validationResult","removeTemporaryKeys","rowIndexesWithErrors","row","filterInvalidRows","DataEditor","onSubmit","onBack","setRowData","useState","gridApi","setGridApi","setGridColumnApi","validationRef","useRef","setTimeout","onlyShowErrors","_setOnlyShowErrors","computeCellStyle","params","border","checked","newValue","newRowData","setOnlyShowErrors","type","htmlFor","onCellValueChanged","rowData","tooltipShowDelay","defaultColDef","minWidth","editable","onGridReady","resizable","cellStyle","headerName","tooltipValueGetter","rowIndex","columnName","ThemeContext","createContext","colors","success","primary","warning","Validator","this","isValid","Error","mapping","regex_matches","required","unique","is_integer","IntegerValidator","definition","FoundValidator","valid","isNaN","fieldValue","message","error","errorType","UniqueValidator","RegexValidator","RegExp","str","regexp","test","RequiredValidator","ValidationResult","hasErrors","allRowIndexes","rowIndexes","parseInt","r","Set","addError","fieldKey","errorsByFieldKeyByRowIndex","hasError","getErrors","computeStatistics","statisticsByFieldKey","headers","isNull","errors","errorsByRowIndex","computeStatisticsForField","length","setCurrentStep","setParsed","setFormattedData","setStatistics","setValidationResult","newFormattedData","output","item","formatData","newValidationResult","validatorsByFieldKey","validators","result","applyValidation","newStatistics","i","usedFilters","h","unselectedFields","filter","selectedFields","finalSelectedFields","file","Papa","complete","foundField","buildSuggestedHeaderMappings","newParsed","App","ready","setReady","href","validate","regex","console","log","maxWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c697d9c.chunk.js","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst TextEnd = styled.section`\n  text-align: right;\n  margin-bottom: 20px;\n`;\n\nconst BreadcrumbItem = styled.span`\n  font-weight: thin;\n  margin-left: 20px;\n  ${props => {\n    if (props.active) {\n      return css`\n        font-weight: bold;\n      `\n    }\n\n    if (props.past) {\n      return css`\n        font-weight: bold;\n        color: #2ecc71;\n      `\n    }\n  }};\n`\n\nconst Aligned = styled.svg`\n  margin-left: 20px;\n  fill: grey;\n`\n\nconst Header = ({ steps, currentStep }) => {\n  return (\n    <TextEnd id=\"csv-importer-nav-header\">\n      { steps.map((step, index) => {\n        const past = currentStep > index;\n        const active = currentStep === index;\n        const last = index === steps.length - 1;\n        return (\n          <BreadcrumbItem key={index} past={past} active={active}>\n            {step}\n            {!last && (\n              <Aligned xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" fill=\"currentColor\" className=\"bi bi-chevron-right\" viewBox=\"0 0 16 16\">\n                <path fillRule=\"evenodd\" d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\" />\n              </Aligned>\n            )}\n          </BreadcrumbItem>\n        );\n      }) }\n    </TextEnd>\n  );\n};\n\nexport default Header;\n","import styled, { css } from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 1200px;\n`\n\nexport const TextStyled = styled.div`\n  ${props => {\n    let styles = {};\n    if (props.muted) {\n      styles['color'] = \"#7f8c8d\";\n    }\n    if (props.danger) {\n      styles['color'] = \"#e74c3c\";\n    }\n    if (props.bold) {\n      styles['fontWeight'] = \"bold\";\n    }\n    return styles\n  }}\n`\nexport const Root = styled.div`\n  animation : none;\n  animation-delay : 0;\n  animation-direction : normal;\n  animation-duration : 0;\n  animation-fill-mode : none;\n  animation-iteration-count : 1;\n  animation-name : none;\n  animation-play-state : running;\n  animation-timing-function : ease;\n  backface-visibility : visible;\n  background : 0;\n  background-attachment : scroll;\n  background-clip : border-box;\n  background-color : transparent;\n  background-image : none;\n  background-origin : padding-box;\n  background-position : 0 0;\n  background-position-x : 0;\n  background-position-y : 0;\n  background-repeat : repeat;\n  background-size : auto auto;\n  border : 0;\n  border-style : none;\n  border-width : medium;\n  border-color : inherit;\n  border-bottom : 0;\n  border-bottom-color : inherit;\n  border-bottom-left-radius : 0;\n  border-bottom-right-radius : 0;\n  border-bottom-style : none;\n  border-bottom-width : medium;\n  border-collapse : separate;\n  border-image : none;\n  border-left : 0;\n  border-left-color : inherit;\n  border-left-style : none;\n  border-left-width : medium;\n  border-radius : 0;\n  border-right : 0;\n  border-right-color : inherit;\n  border-right-style : none;\n  border-right-width : medium;\n  border-spacing : 0;\n  border-top : 0;\n  border-top-color : inherit;\n  border-top-left-radius : 0;\n  border-top-right-radius : 0;\n  border-top-style : none;\n  border-top-width : medium;\n  bottom : auto;\n  box-shadow : none;\n  box-sizing : content-box;\n  caption-side : top;\n  clear : none;\n  clip : auto;\n  color : inherit;\n  columns : auto;\n  column-count : auto;\n  column-fill : balance;\n  column-gap : normal;\n  column-rule : medium none currentColor;\n  column-rule-color : currentColor;\n  column-rule-style : none;\n  column-rule-width : none;\n  column-span : 1;\n  column-width : auto;\n  content : normal;\n  counter-increment : none;\n  counter-reset : none;\n  cursor : auto;\n  direction : ltr;\n  display : inline;\n  empty-cells : show;\n  float : none;\n  font : normal;\n  font-family : inherit;\n  font-size : 16px !important;\n  font-style : normal;\n  font-variant : normal;\n  font-weight : normal;\n  height : auto;\n  hyphens : none;\n  left : auto;\n  letter-spacing : normal;\n  line-height : normal;\n  list-style : none;\n  list-style-image : none;\n  list-style-position : outside;\n  list-style-type : disc;\n  margin : 0;\n  margin-bottom : 0;\n  margin-left : 0;\n  margin-right : 0;\n  margin-top : 0;\n  max-height : none;\n  max-width : none;\n  min-height : 0;\n  min-width : 0;\n  opacity : 1;\n  orphans : 0;\n  outline : 0;\n  outline-color : invert;\n  outline-style : none;\n  outline-width : medium;\n  overflow : visible;\n  overflow-x : visible;\n  overflow-y : visible;\n  padding : 0;\n  padding-bottom : 0;\n  padding-left : 0;\n  padding-right : 0;\n  padding-top : 0;\n  page-break-after : auto;\n  page-break-before : auto;\n  page-break-inside : auto;\n  perspective : none;\n  perspective-origin : 50% 50%;\n  position : static;\n  right : auto;\n  tab-size : 8;\n  table-layout : auto;\n  text-align : inherit;\n  text-align-last : auto;\n  text-decoration : none;\n  text-decoration-color : inherit;\n  text-decoration-line : none;\n  text-decoration-style : solid;\n  text-indent : 0;\n  text-shadow : none;\n  text-transform : none;\n  top : auto;\n  transform : none;\n  transform-style : flat;\n  transition : none;\n  transition-delay : 0s;\n  transition-duration : 0s;\n  transition-property : none;\n  transition-timing-function : ease;\n  unicode-bidi : normal;\n  vertical-align : baseline;\n  visibility : visible;\n  white-space : normal;\n  widows : 0;\n  width : auto;\n  word-spacing : normal;\n  z-index : auto;\n  all: initial;\n  all: unset;\n`\n\nexport const Card = styled.div`\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n  padding: 10px;\n  border-radius: 5px;\n`\n\nexport const Align = styled.div`\n${\n  props => {\n    if (props.right) {\n      return css`text-align: right`\n    } else if (props.center) {\n      return css`text-align: center`\n    }\n  }\n}\n`\n\nexport const Margin = styled.div`\n  ${\n    props => {\n      return css`\n        margin: ${props.margin};\n      `;\n    }\n  }\n`\n\nexport const Padded = styled.div`\n  ${\n    props => {\n      return css`\n        padding: ${props.padding};\n      `;\n    }\n  }\n`\n\nexport const Table = styled.table`\n  border: 1px solid #aaa;\n  width: 100%;\n  th, td {\n    border: 1px solid #aaa;\n  }\n`\n\nexport const Row = styled.div`\n  flex-direction: row;\n  display: flex;\n`\n\nexport const Col = styled.div`\n  ${props => {\n    let customCss = {};\n    if (props.flex) {\n      customCss['flex'] = props.flex;\n    } else {\n      customCss['flex'] = 1;\n    }\n    if (props.verticallyCenter) {\n      customCss['display'] = 'flex';\n      customCss['alignItems'] = 'center';\n    }\n    if (props.spaceBetween) {\n      customCss['display'] = 'flex';\n      customCss['justifyContent'] = 'space-between';\n    }\n    return customCss;\n  }}\n`\n\nexport const Button = styled.button`\n  border: none;\n  padding: 10px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  font-weight: bold;\n  border-radius: 5px;\n\n  ${props => {\n    let color = \"#2980b9\";\n    if (props.variant === 'success') {\n      color = 'green';\n    } else if (props.variant === 'danger') {\n      color = '#e74c3c';\n    } else if (props.variant === \"secondary\") {\n      color = '#7f8c8d';\n    } else if (props.variant === \"warning\") {\n      color = '#e67e22';\n    }\n\n    if (props.disabled) {\n      color += 'bb';\n    }\n    if (props.outline) {\n      return css`\n        border: 1px solid ${color};\n        color: ${color};\n      `;\n    } else {\n      return css`\n        color: white;\n        background-color: ${color};\n        border: 1px solid ${color};\n      `;\n    }\n  }}\n`","import React, { useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components'\nimport { Button, Row, Col, Align, Card, Padded, Margin, TextStyled } from './common'\n\n\nconst StyledDiv = styled.div`\n  // Some styling here\n`\n\nconst FileUploader = ({ setFile }) => {\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone();\n\n  useEffect(() => {\n    if (acceptedFiles.length > 0) {\n      setFile(acceptedFiles[0])\n    }\n  }, [acceptedFiles]);\n\n  return (\n    <Card {...getRootProps()} style={{cursor: 'pointer', backgroundColor: \"rgb(250, 250, 250)\"}}>\n      <Padded padding=\"30px\">\n        <input {...getInputProps()} />\n        <Margin margin=\"0 0 30px 0\">\n          <TextStyled muted>\n          Pick a file\n          </TextStyled>\n        </Margin>\n        <Row>\n          <Col flex=\"3\">\n            <Row>\n              <Col flex=\"1\">\n                <svg style={{marginRight: \"20px\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"#7f8c8d\" className=\"bi bi-cloud-arrow-up\" viewBox=\"0 0 16 16\">\n                  <path fillRule=\"evenodd\" d=\"M7.646 5.146a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 6.707V10.5a.5.5 0 0 1-1 0V6.707L6.354 7.854a.5.5 0 1 1-.708-.708l2-2z\" />\n                  <path d=\"M4.406 3.342A5.53 5.53 0 0 1 8 2c2.69 0 4.923 2 5.166 4.579C14.758 6.804 16 8.137 16 9.773 16 11.569 14.502 13 12.687 13H3.781C1.708 13 0 11.366 0 9.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383zm.653.757c-.757.653-1.153 1.44-1.153 2.056v.448l-.445.049C2.064 6.805 1 7.952 1 9.318 1 10.785 2.23 12 3.781 12h8.906C13.98 12 15 10.988 15 9.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 4.825 10.328 3 8 3a4.53 4.53 0 0 0-2.941 1.1z\" />\n                </svg>\n              </Col>\n              <Col flex=\"6\">\n                <h5 style={{marginBottom: \"10px\"}}>Drag and drop your file here</h5>\n                <TextStyled muted>Limit 20MB • CSV</TextStyled>\n              </Col>\n            </Row>\n\n          </Col>\n          <Col flex=\"1\">\n            <Align right>\n              <Button variant=\"secondary\" outline>Browse Files</Button>\n            </Align>\n          </Col>\n        </Row>\n      </Padded>\n    </Card>\n  );\n};\n\nexport default FileUploader;\n","import React from 'react';\nimport Select from 'react-select';\nimport { Card, Margin, Button, Row, Col, Padded, Table, Align } from './common'\n\nconst percentage = (a, b) => {\n  return Math.round((a / b * 100) * 10) / 10;\n}\n\nconst MappingStatistics = ({ fieldStatistics, selectedField, }) => {\n  const total = fieldStatistics.total;\n  const counts = fieldStatistics.statistics?.counts;\n  const errorTypeCounts = fieldStatistics.statistics?.errorTypeCounts;\n  if (!counts || !errorTypeCounts) {\n    return <div></div>\n  }\n  return (\n    <div>\n      {selectedField && <div>Matched to <b>{selectedField.label}</b></div>}\n      {!selectedField && <div><b>No match detected</b></div>}\n      <br />\n      <div>\n        <svg style={{ marginRight: \"10px\" }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#7f8c8d\" className=\"bi bi-info-circle-fill\" viewBox=\"0 0 16 16\">\n          <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\" />\n        </svg>\n\n        <b>{percentage(total - counts.isNull, total)}%</b> of your rows have a value for this column\n      </div>\n      {errorTypeCounts.total === 0 && (\n        <div>\n          <svg style={{marginRight: \"10px\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#2ecc71\" className=\"bi bi-check-lg\" viewBox=\"0 0 16 16\">\n            <path d=\"M13.485 1.431a1.473 1.473 0 0 1 2.104 2.062l-7.84 9.801a1.473 1.473 0 0 1-2.12.04L.431 8.138a1.473 1.473 0 0 1 2.084-2.083l4.111 4.112 6.82-8.69a.486.486 0 0 1 .04-.045z\" />\n          </svg>\n\n          All rows pass validation for this column.\n        </div>\n      )}\n      {errorTypeCounts.total > 0 && (\n        <div>\n          <svg style={{marginRight: \"10px\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#f39c12\" className=\"bi bi-exclamation-diamond-fill\" viewBox=\"0 0 16 16\">\n            <path d=\"M9.05.435c-.58-.58-1.52-.58-2.1 0L.436 6.95c-.58.58-.58 1.519 0 2.098l6.516 6.516c.58.58 1.519.58 2.098 0l6.516-6.516c.58-.58.58-1.519 0-2.098L9.05.435zM8 4c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995A.905.905 0 0 1 8 4zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\n          </svg>\n\n          {(errorTypeCounts.total / total < 0.02) && <span><b>{errorTypeCounts.total}</b> rows fail validation (repair on next step)</span>}\n          {(errorTypeCounts.total / total >= 0.02) && <span><b>{percentage(errorTypeCounts.total, total)}%</b> of rows fail validation (repair on next step)</span>}\n        </div>\n      )}\n    </div>\n  );\n}\nconst HeaderMapperSelection = ({header, examples, setHeader, selectedHeader, options}) => {\n  return (\n    <div>\n      <Margin margin=\"20px 0\">\n        <Row>\n          <Col verticallyCenter spaceBetween>\n            <Margin margin=\"0 10px\">{header.slice(0, 30)}</Margin>\n            <Padded padding=\"0 20px\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-right\" viewBox=\"0 0 16 16\">\n              <path fillRule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\" />\n            </svg>\n            </Padded>\n          </Col>\n          <Col>\n            <Select isClearable={true} isSearchable={true} value={selectedHeader} options={options} onChange={setHeader} />\n          </Col>\n        </Row>\n      </Margin>\n      <Table>\n        <tbody>\n          {examples.map((e, idx) => {\n            return (\n              <tr key={idx}>\n                <td style={{ backgroundColor: '#ecf0f1', textAlign: 'center', width: \"40px\" }}>\n                  {idx}\n                </td>\n                <td style={{ padding: '10px 20px' }}>\n                  {e || <i>No Data</i>}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nconst HeaderMapperRow = ({options, header, examples, headerMapping, setHeaderMapping, fieldStatistics}) => {\n  let block = null;\n  if (headerMapping.confirmed) {\n    block = (\n      <Row>\n        <Col>\n          <Row>\n            <Col verticallyCenter spaceBetween>\n              <Margin margin=\"0 10px\">{header.slice(0, 30)}</Margin>\n              <Padded padding=\"0 20px\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-right\" viewBox=\"0 0 16 16\">\n                  <path fillRule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\" />\n                </svg>\n              </Padded>\n            </Col>\n            <Col>\n              <Select isDisabled={true} value={headerMapping.selectedField} />\n            </Col>\n          </Row>\n        </Col>\n        <Col spaceBetween verticallyCenter>\n          <div>\n            <svg style={{margin: \"-2px 10px\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#2ecc71\" className=\"bi bi-check-lg\" viewBox=\"0 0 16 16\">\n              <path d=\"M13.485 1.431a1.473 1.473 0 0 1 2.104 2.062l-7.84 9.801a1.473 1.473 0 0 1-2.12.04L.431 8.138a1.473 1.473 0 0 1 2.084-2.083l4.111 4.112 6.82-8.69a.486.486 0 0 1 .04-.045z\" />\n            </svg>\n            Confirmed\n          </div>\n\n          <Button onClick={() => {\n            setHeaderMapping({\n              ...headerMapping,\n              confirmed: false,\n            })\n          }}>Edit</Button>\n        </Col>\n      </Row>\n    );\n  } else if (headerMapping.ignored) {\n    block = (\n      <Row>\n        <Col verticallyCenter>\n          <Margin margin=\"0 10px\">{ header }</Margin>\n        </Col>\n        <Col spaceBetween verticallyCenter>\n          <div>\n            <svg style={{margin: \"-2px 10px\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-eye-slash-fill\" viewBox=\"0 0 16 16\">\n              <path d=\"m10.79 12.912-1.614-1.615a3.5 3.5 0 0 1-4.474-4.474l-2.06-2.06C.938 6.278 0 8 0 8s3 5.5 8 5.5a7.029 7.029 0 0 0 2.79-.588zM5.21 3.088A7.028 7.028 0 0 1 8 2.5c5 0 8 5.5 8 5.5s-.939 1.721-2.641 3.238l-2.062-2.062a3.5 3.5 0 0 0-4.474-4.474L5.21 3.089z\" />\n              <path d=\"M5.525 7.646a2.5 2.5 0 0 0 2.829 2.829l-2.83-2.829zm4.95.708-2.829-2.83a2.5 2.5 0 0 1 2.829 2.829zm3.171 6-12-12 .708-.708 12 12-.708.708z\" />\n            </svg>\n            Ignored\n          </div>\n\n          <Button onClick={() => {\n            setHeaderMapping({\n              ...headerMapping,\n              selectedField: null,\n              ignored: false,\n              name: null,\n            })\n          }}>Edit</Button>\n        </Col>\n      </Row>\n    );\n  } else {\n    block = (\n      <Row>\n        <Col>\n          <HeaderMapperSelection\n            options={options}\n            header={header}\n            examples={examples}\n            selectedHeader={headerMapping.selectedField}\n            setHeader={(selectedField) => {\n              setHeaderMapping({\n                ...headerMapping,\n                selectedField,\n                ignored: false,\n                name: header,\n              })\n            }}\n          />\n        </Col>\n        <Col>\n          <Padded\n            padding=\"20px 0 0 20px\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: \"90%\",\n              justifyContent: \"space-between\"\n            }}>\n            <div>\n              {headerMapping.selectedField && (\n                <MappingStatistics selectedField={headerMapping.selectedField} fieldStatistics={fieldStatistics} />\n              )}\n            </div>\n            <div>\n              {\n                headerMapping.selectedField && \n                <Button style={{ marginRight: '10px' }} variant=\"success\" onClick={() => {\n                  setHeaderMapping({ ...headerMapping, confirmed: true });\n                }}>Confirm mapping</Button>\n              }\n              <Button variant=\"secondary\" outline onClick={() => {\n                setHeaderMapping({ ...headerMapping, ignored: true });\n              }}>Ignore this column</Button>\n            </div>\n          </Padded>\n        </Col>\n      </Row>\n    );\n  }\n  return (\n    <Margin margin=\"20px 0\">\n      <Card>{block}</Card>\n    </Margin>\n  );\n}\nexport default HeaderMapperRow;","import React from 'react';\nimport HeaderMapperRow from './HeaderMapperRow';\nimport { Button, Align, Margin, TextStyled, Col, Row } from './common'\n\nconst HeaderMapper = ({ parsed, fields, statistics, headerMappings, setHeaderMappings, missingRequiredFields, onComplete, restart }) => {\n  const data = parsed.data;\n  const options = fields.map(f => {\n    return {\n      label: f.label,\n      value: f.key,\n    }\n  });\n\n  const hasMissingRequiredFields = missingRequiredFields.length > 0;\n\n  return (\n    <div>\n      <div>\n        <h5>{parsed.data.length - 1} Rows Imported</h5>\n      </div>\n      {\n        data[0].map((header, columnIndex) => {\n          const examples = data.slice(1, 4).map(d => d[columnIndex]);\n          const headerMapping = headerMappings[columnIndex] || {};\n          const fieldStatistics = {\n            total: statistics.total,\n            statistics: statistics.statisticsByFieldKey[headerMapping.selectedField?.value],\n          }\n          return <HeaderMapperRow\n            key={columnIndex}\n            columnIndex={columnIndex}\n            header={header}\n            examples={examples}\n            headerMapping={headerMapping}\n            setHeaderMapping={(headerMapping) => {\n              let newMappings = { ...headerMappings }\n              headerMapping.columnIndex = columnIndex;\n              newMappings[columnIndex] = headerMapping\n              setHeaderMappings(newMappings);\n            }}\n            options={options}\n            fieldStatistics={fieldStatistics}\n          />\n        })\n      }\n      <Margin margin=\"20px 0\">\n        <Align right>\n          {hasMissingRequiredFields && (\n            missingRequiredFields.map(f => {\n              return (\n                <div>\n                  <TextStyled style={{ marginBottom: \"15px\" }} danger bold>\n                    Missing mapping for {f.label}\n                    <svg style={{marginLeft: \"10px\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#e74c3c\" className=\"bi bi-exclamation-circle-fill\" viewBox=\"0 0 16 16\">\n                      <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\" />\n                    </svg>\n                  </TextStyled>\n                </div>\n              );\n            })\n          )}\n        </Align>\n        <Row>\n          <Col>\n            <Button onClick={restart} outline>\n              Back\n            </Button>\n          </Col>\n          <Col>\n            <Align right>\n              <Button onClick={onComplete} variant={hasMissingRequiredFields ? \"danger\" : \"primary\"}>\n                {hasMissingRequiredFields && \"Proceed Anyways\"}\n                {!hasMissingRequiredFields && \"Review\"}\n              </Button>\n            </Align>\n          </Col>\n        </Row>\n      </Margin>\n    </div>\n  );\n};\n\nexport default HeaderMapper;\n","export const isUndefinedOrNull = (a) => {\n  return a === null || a === undefined\n}\n\nexport const isPresent = (a) => !isUndefinedOrNull(a)\n\nexport const formatData = (headerMappings, data) => {\n  const output = []\n  for (let rowIndex = 1; rowIndex < data.length; rowIndex++) {\n    const item = {}\n    const row = data[rowIndex]\n    Object.keys(headerMappings).forEach((k) => {\n      const headerMapping = headerMappings[k]\n      const columnIndex = headerMapping.columnIndex\n      if (headerMapping.selectedField && headerMapping.confirmed) {\n        item[headerMapping.selectedField.value] = row[columnIndex]\n      }\n    })\n    item.rowIndex = rowIndex - 1\n    output.push(item)\n  }\n  return output\n}\n\nexport const buildSuggestedHeaderMappings = (fields, headers) => {\n  const headerMappings = {}\n  headers.forEach((header, columnIndex) => {\n    const foundField = fields.find((f) => {\n      const normalizedKey = f.key\n        .toLowerCase()\n        .replace('_', '')\n        .replace(' ', '')\n      const normalizedHeader = header\n        .toLowerCase()\n        .replace('_', '')\n        .replace(' ', '')\n      return normalizedKey === normalizedHeader\n    })\n\n    if (!foundField) {\n      return\n    }\n\n    headerMappings[columnIndex] = {\n      columnIndex,\n      name: header,\n      selectedField: {\n        value: foundField.key,\n        label: foundField.label\n      }\n    }\n  })\n  // create header mappings (columnIndex => {columnIndex, name: inputHeader, selectedField: {value: '', label: ''}})\n  return headerMappings\n}\n\nexport const filterEmptyRows = (formattedData) => {\n  return formattedData.filter(\n    (d) => Object.keys(d).filter((k) => k !== 'rowIndex').length > 0\n  )\n}\n\nexport const filterInvalidRows = (formattedData, validationResult) => {\n  const rowIndexesWithErrors = validationResult.rowIndexesWithErrors()\n  formattedData = formattedData.filter(\n    (row) => !rowIndexesWithErrors.has(row.rowIndex)\n  )\n  return filterEmptyRows(formattedData)\n}\n\nexport const removeTemporaryKeys = (formattedData) => {\n  formattedData.forEach((f) => {\n    delete f.rowIndex\n  })\n  return formattedData\n}\n\nexport const fieldIsRequired = (field) => {\n  if (field.validators && field.validators.length > 0) {\n    const isRequired = field.validators.find((v) => v.validate === 'required')\n    return !!isRequired\n  }\n  return false\n}\n\nexport const buildFinalData = (formattedData, validationResult) => {\n  return removeTemporaryKeys(\n    filterInvalidRows(filterEmptyRows(formattedData), validationResult)\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { Button, Margin, Align, Row, Col } from './common';\nimport { filterEmptyRows, isPresent } from '../utils';\n\n\nconst DataEditor = ({ formattedData, fields, onSubmit, onBack, validationResult, setRowData }) => {\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const validationRef = useRef(validationResult);\n  validationRef.current = validationResult;\n\n  useEffect(() => {\n    setTimeout(() => {\n      gridApi?.redrawRows();\n    }, 0);\n  }, [validationResult]);\n\n  const onGridReady = (params) => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n  };\n\n  const [onlyShowErrors, _setOnlyShowErrors] = useState(false);\n  const computeCellStyle = (params) => {\n    if (\n      isPresent(params.column.colDef.field) &&\n      isPresent(params.data.rowIndex) &&\n      validationRef.current.hasError(params.column.colDef.field, params.data.rowIndex)\n    ) {\n      return {\n        color: 'rgba(192, 57, 43, 1.0)',\n        backgroundColor: 'rgba(231, 76, 60, 0.3)',\n        border: '1px solid rgba(192, 57, 43, 1.0)',\n      }\n    }\n    return null;\n  }\n\n  const setOnlyShowErrors = (newValue) => {\n    _setOnlyShowErrors(newValue);\n    let newRowData;\n    if (newValue) {\n      const rowIndexesWithErrors = validationResult.rowIndexesWithErrors();\n      newRowData = formattedData.filter((_, index) => rowIndexesWithErrors.has(index));\n    } else {\n      newRowData = formattedData;\n    }\n    gridApi.setRowData(newRowData);\n  }\n\n  const onCellValueChanged = (params) => {\n    // Change the data and revalidate the entire dataset.\n    // Because some validations are global validations.\n    setRowData(params.data, params.rowIndex);\n  }\n\n  const shouldShowSubmit = () => {\n    const hasData = filterEmptyRows(formattedData).length > 0;\n    return hasData;\n  }\n\n  return (\n    <div>\n      <Margin margin=\"20px 0\">\n        <input checked={onlyShowErrors} onChange={(e) => {\n          setOnlyShowErrors(e.target.checked);\n        }} type=\"checkbox\" name=\"row-errors\" id=\"row-errors\" />\n        <label style={{marginLeft: '10px'}} htmlFor=\"row-errors\">Only show rows with errors</label>\n      </Margin>\n      <div style={{height: 500, width: '100%'}} className=\"ag-theme-alpine\">\n        <AgGridReact\n          onCellValueChanged={onCellValueChanged}\n          rowData={formattedData}\n          tooltipShowDelay={0}\n          defaultColDef={{\n            flex: 1,\n            minWidth: 100,\n            editable: true,\n          }}\n          onGridReady={onGridReady}\n        >\n          {fields.map(field => {\n            return (\n              <AgGridColumn\n                resizable={true}\n                cellStyle={computeCellStyle}\n                key={field.key}\n                headerName={field.label}\n                tooltipValueGetter={(params) => {\n                  const rowIndex = params.rowIndex;\n                  const columnName = params.colDef.field;\n\n                  if (validationRef.current.hasError(columnName, rowIndex)) {\n                    const errors = validationRef.current.getErrors(columnName, rowIndex);\n                    return errors.map(e => e.message).join(\", \");\n                  }\n                }}\n                field={field.key}\n              ></AgGridColumn>\n            );\n          })}\n        </AgGridReact>\n      </div>\n      <Margin margin=\"20px 0\">\n        <Row>\n          <Col>\n            {onBack && (\n              <Button onClick={onBack} outline>\n                Back\n              </Button>\n            )}\n          </Col>\n          <Col>\n            <Align right>\n              {shouldShowSubmit() && (\n                <Button onClick={onSubmit}>\n                  {validationResult.hasErrors() && \"Upload Rows Without Errors\"}\n                  {!validationResult.hasErrors() && \"Upload\"}\n                </Button>\n              )}\n            </Align>\n          </Col>\n        </Row>\n      </Margin>\n    </div>\n  );\n};\n\nexport default DataEditor;\n","import { createContext } from 'react'\nexport const ThemeContext = createContext({\n  colors: {\n    success: '#2ecc71',\n    primary: '#3498db',\n    warning: '#f39c12',\n    danger: '#e74c3c'\n  }\n})\n","import { fieldIsRequired } from '../utils'\n\nexport class Validator {\n  constructor(definition) {\n    this.definition = definition\n  }\n\n  isValid(fieldValue, row) {\n    throw new Error('Not Implemented')\n  }\n\n  static buildFromDefinition(definition) {\n    const mapping = {\n      regex_matches: RegexValidator,\n      required: RequiredValidator,\n      unique: UniqueValidator,\n      is_integer: IntegerValidator\n    }\n    if (!(definition.validate in mapping)) {\n      throw new Error(`Missing validator for ${definition.validate}`)\n    }\n    const FoundValidator = mapping[definition.validate]\n    return new FoundValidator(definition)\n  }\n}\n\nexport class IntegerValidator extends Validator {\n  isValid(fieldValue) {\n    return {\n      valid:\n        !isNaN(fieldValue) && fieldValue !== null && fieldValue !== undefined,\n      message: this.definition.error || 'This is not a valid number',\n      errorType: 'is_integer'\n    }\n  }\n}\n\nexport class UniqueValidator extends Validator {\n  constructor(definition) {\n    super(definition)\n    this.seen = {}\n  }\n\n  isValid(fieldValue) {\n    if (fieldValue in this.seen) {\n      return {\n        valid: false,\n        message: this.definition.error || 'This value is not unique',\n        errorType: 'unique'\n      }\n    }\n    this.seen[fieldValue] = true\n    return { valid: true }\n  }\n}\n\nfunction escapeStringRegExp(str) {\n  return str.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n}\n\nexport class RegexValidator extends Validator {\n  constructor(definition) {\n    super(definition)\n    if (typeof this.definition.regex === 'object') {\n      this.regexp = this.definition.regex\n    } else {\n      this.regexp = new RegExp(escapeStringRegExp(this.definition.regex))\n    }\n    this.seen = {}\n  }\n\n  isValid(fieldValue) {\n    const matches = this.regexp.test(fieldValue)\n    if (!matches) {\n      return {\n        valid: false,\n        message: 'This value is invalid' || this.definition.error,\n        errorType: 'regex'\n      }\n    }\n    return { valid: true }\n  }\n}\n\nexport class RequiredValidator extends Validator {\n  isValid(fieldValue) {\n    if (!fieldValue) {\n      return {\n        valid: false,\n        message: this.definition.error || 'This value is required',\n        errorType: 'required'\n      }\n    }\n    return { valid: true }\n  }\n}\n\nexport class ValidationResult {\n  constructor() {\n    this.errorsByFieldKeyByRowIndex = {}\n  }\n\n  hasErrors() {\n    return (\n      Object.keys(this.errorsByFieldKeyByRowIndex).filter((fieldKey) => {\n        return Object.keys(this.errorsByFieldKeyByRowIndex[fieldKey]).length > 0\n      }).length > 0\n    )\n  }\n\n  rowIndexesWithErrors() {\n    let allRowIndexes = []\n    Object.keys(this.errorsByFieldKeyByRowIndex).forEach((fieldKey) => {\n      const rowIndexes = Object.keys(this.errorsByFieldKeyByRowIndex[fieldKey])\n      allRowIndexes = allRowIndexes.concat(\n        rowIndexes.map((r) => parseInt(r, 10))\n      )\n    })\n    return new Set(allRowIndexes)\n  }\n\n  addError(fieldKey, rowIndex, error) {\n    fieldKey = fieldKey.toString()\n    rowIndex = rowIndex.toString()\n    if (!(fieldKey in this.errorsByFieldKeyByRowIndex)) {\n      this.errorsByFieldKeyByRowIndex[fieldKey] = {}\n    }\n    if (!(rowIndex in this.errorsByFieldKeyByRowIndex[fieldKey])) {\n      this.errorsByFieldKeyByRowIndex[fieldKey][rowIndex] = []\n    }\n    this.errorsByFieldKeyByRowIndex[fieldKey][rowIndex].push(error)\n  }\n\n  hasError(fieldKey, rowIndex) {\n    fieldKey = fieldKey.toString()\n    rowIndex = rowIndex.toString()\n    return (\n      fieldKey in this.errorsByFieldKeyByRowIndex &&\n      rowIndex in this.errorsByFieldKeyByRowIndex[fieldKey]\n    )\n  }\n\n  getErrors(fieldKey, rowIndex) {\n    fieldKey = fieldKey.toString()\n    rowIndex = rowIndex.toString()\n    return this.errorsByFieldKeyByRowIndex[fieldKey][rowIndex]\n  }\n}\n\nexport const applyValidation = (formattedData, fields) => {\n  const validatorsByFieldKey = {}\n  fields.forEach((field) => {\n    validatorsByFieldKey[field.key] = []\n    if (!field.validators) {\n      return\n    }\n\n    field.validators.forEach((validatorDefinition) => {\n      validatorsByFieldKey[field.key].push(\n        Validator.buildFromDefinition(validatorDefinition)\n      )\n    })\n  })\n\n  const validationResult = new ValidationResult()\n  fields.forEach((field) => {\n    formattedData.forEach((row, rowIndex) => {\n      if (!(field.key in row) && !fieldIsRequired(field)) {\n        return\n      }\n      const value = row[field.key]\n      const validators = validatorsByFieldKey[field.key]\n\n      validators.forEach((v) => {\n        const result = v.isValid(value)\n        if (!result.valid) {\n          validationResult.addError(field.key, rowIndex, result)\n        }\n      })\n    })\n  })\n  return validationResult\n}\n\nconst computeStatisticsForField = (\n  fieldKey,\n  formattedData,\n  errorsByRowIndex\n) => {\n  const errorTypeCounts = { total: 0 }\n  const counts = { isNull: 0 }\n  formattedData.forEach((d) => {\n    if (!d[fieldKey]) {\n      counts.isNull += 1\n    }\n  })\n\n  Object.keys(errorsByRowIndex).forEach((rowIndex) => {\n    const errors = errorsByRowIndex[rowIndex]\n    if (errors && errors.length > 0) {\n      errorTypeCounts.total += 1\n    }\n    errors.forEach((error) => {\n      if (error.errorType in errorTypeCounts) {\n        errorTypeCounts[error.errorType] += 1\n      } else {\n        errorTypeCounts[error.errorType] = 1\n      }\n    })\n  })\n  return { errorTypeCounts, counts }\n}\n\nexport const computeStatistics = (\n  formattedData,\n  headerMappings,\n  validationResult\n) => {\n  const statisticsByFieldKey = {}\n  const headers = Object.keys(headerMappings).map((k) => headerMappings[k])\n  headers.forEach((headerMapping) => {\n    if (!headerMapping.selectedField) {\n      return\n    }\n    const fieldKey = headerMapping.selectedField.value\n    statisticsByFieldKey[fieldKey] = computeStatisticsForField(\n      fieldKey,\n      formattedData,\n      validationResult.errorsByFieldKeyByRowIndex[fieldKey] || {}\n    )\n  })\n  return { statisticsByFieldKey, total: formattedData.length }\n}\n","import React, { useEffect, useState } from 'react'\nimport Papa from 'papaparse'\nimport Header from './components/Header'\nimport FileUploader from './components/FileUploader'\nimport HeaderMapper from './components/HeaderMapper'\nimport DataEditor from './components/DataEditor'\nimport {\n  fieldIsRequired,\n  fillInRequiredRows,\n  formatData,\n  buildSuggestedHeaderMappings,\n  buildFinalData\n} from './utils'\nimport { ThemeContext } from './contexts'\nimport { Root, Margin, Container } from './components/common'\nimport {\n  applyValidation,\n  computeStatistics,\n  ValidationResult\n} from './validators'\n\nconst Importer = ({ theme, onComplete, fields }) => {\n  const [currentStep, setCurrentStep] = useState(0)\n  const [parsed, setParsed] = useState(null)\n  const [formattedData, setFormattedData] = useState([])\n  const [statistics, setStatistics] = useState({\n    statisticsByFieldKey: {},\n    total: null\n  })\n  const [headerMappings, setHeaderMappings] = useState({})\n  const [validationResult, setValidationResult] = useState(\n    new ValidationResult()\n  )\n\n  const restart = () => {\n    setCurrentStep(0)\n    setParsed(null)\n    setFormattedData([])\n    setStatistics({ statisticsByFieldKey: {}, total: null })\n    setHeaderMappings({})\n    setValidationResult(new ValidationResult())\n  }\n\n  const setFile = (file) => {\n    Papa.parse(file, {\n      complete: (newParsed) => {\n        setParsed(newParsed)\n        setHeaderMappings(\n          buildSuggestedHeaderMappings(fields, newParsed.data[0])\n        )\n        setCurrentStep(1)\n      }\n    })\n  }\n\n  useEffect(() => {\n    if (parsed && parsed.data) {\n      const newFormattedData = formatData(headerMappings, parsed.data)\n      setFormattedData(newFormattedData)\n    }\n  }, [headerMappings])\n\n  useEffect(() => {\n    if (formattedData.length > 0) {\n      const newValidationResult = applyValidation(formattedData, fields)\n      setValidationResult(newValidationResult)\n      const newStatistics = computeStatistics(\n        formattedData,\n        headerMappings,\n        newValidationResult\n      )\n      setStatistics(newStatistics)\n    }\n  }, [formattedData])\n\n  const rowData = []\n  for (let i = 0; i < 100; i++) {\n    rowData.push({ rowIndex: i })\n  }\n\n  const usedFilters = Object.keys(headerMappings)\n    .map((h) => headerMappings[h])\n    .filter((h) => !h.ignored && h.selectedField)\n    .map((h) => h.selectedField.value)\n\n  const unselectedFields = fields.filter((filter) => {\n    return usedFilters.indexOf(filter.key) < 0\n  })\n\n  const headers = Object.keys(headerMappings)\n    .map((h) => headerMappings[h])\n    .filter((h) => h.confirmed)\n    .map((h) => h.selectedField.value)\n\n  const selectedFields = fields.filter((f) => {\n    return headers.indexOf(f.key) >= 0\n  })\n\n  const missingRequiredFields = fields\n    .filter((f) => fieldIsRequired(f))\n    .filter((f) => {\n      return selectedFields.map((f) => f.key).indexOf(f.key) === -1\n    })\n\n  const finalSelectedFields = fields.filter((f) => {\n    return headers.indexOf(f.key) >= 0 || fieldIsRequired(f)\n  })\n\n  return (\n    <ThemeContext.Provider>\n      <Root>\n        <Container>\n          <Header\n            steps={['Upload', 'Match', 'Review', 'Complete']}\n            currentStep={currentStep}\n          />\n          {currentStep === 0 && (\n            <div>\n              <FileUploader setFile={setFile} />\n              <Margin margin='40px 0 10px 0'>\n                <h6>Or just manually enter your data</h6>\n              </Margin>\n              <DataEditor\n                statistics={statistics}\n                formattedData={\n                  formattedData.length > 0 ? formattedData : rowData\n                }\n                fields={fields}\n                headerMappings={headerMappings}\n                validationResult={validationResult}\n                onSubmit={() => {\n                  onComplete(buildFinalData(formattedData, validationResult))\n                }}\n                setRowData={(row, index) => {\n                  const newRowData = [...rowData]\n                  newRowData[index] = row\n                  setFormattedData(newRowData)\n                }}\n              />\n            </div>\n          )}\n          {currentStep === 1 && (\n            <HeaderMapper\n              statistics={statistics}\n              parsed={parsed}\n              fields={unselectedFields}\n              headerMappings={headerMappings}\n              missingRequiredFields={missingRequiredFields}\n              setHeaderMappings={setHeaderMappings}\n              restart={restart}\n              onComplete={() => {\n                setCurrentStep(2)\n              }}\n            />\n          )}\n          {currentStep === 2 && (\n            <DataEditor\n              statistics={statistics}\n              formattedData={formattedData}\n              fields={finalSelectedFields}\n              headerMappings={headerMappings}\n              validationResult={validationResult}\n              onBack={() => {\n                setCurrentStep(1)\n              }}\n              onSubmit={() => {\n                onComplete(buildFinalData(formattedData, validationResult))\n              }}\n              setRowData={(row, index) => {\n                const newFormattedData = [...formattedData]\n                newFormattedData[index] = row\n                setFormattedData(newFormattedData)\n              }}\n            />\n          )}\n        </Container>\n      </Root>\n    </ThemeContext.Provider>\n  )\n}\n\nexport default Importer\n","import React, { useState } from 'react';\nimport Importer from 'react-importer'\nimport { JsonEditor as Editor } from 'jsoneditor-react';\n\nimport 'jsoneditor-react/es/editor.min.css';\nimport 'react-importer/dist/index.css'\n\nconst App = () => {\n  const [ready, setReady] = useState(false);\n  const onComplete = (data) => {\n    console.log(data);\n    setReady(true);\n  }\n  const content = `<Importer\n  fields={[\n    {\n      label: \"Name\", key: \"name\", validators: [\n        { validate: \"required\" },\n      ]\n    },\n    {\n      label: \"Email\", key: \"email\", validators: [\n        { validate: \"required\" },\n        { validate: \"unique\", error: \"This email is not unique\" },\n      ]\n    },\n    { label: \"State\", key: \"state\" },\n  ]}\n  onComplete={(data) => {\n    console.log(data)\n  }}\n/>`\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"header\">\n          <div className=\"main\">\n            <svg style={{marginRight: '20px'}} xmlns=\"http://www.w3.org/2000/svg\" width=\"58\" height=\"58\" fill=\"#3498db\" className=\"bi bi-file-spreadsheet\" viewBox=\"0 0 16 16\">\n              <path d=\"M9.293 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4.707A1 1 0 0 0 13.707 4L10 .293A1 1 0 0 0 9.293 0zM9.5 3.5v-2l3 3h-2a1 1 0 0 1-1-1zM6.354 9.854a.5.5 0 0 1-.708-.708l2-2a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 8.707V12.5a.5.5 0 0 1-1 0V8.707L6.354 9.854z\" />\n            </svg>\n            React Importer\n          </div>\n          <div className=\"subtext\">A modern CSV importer in React.</div>\n        </div>\n\n        <div className=\"content\">\n          <h1>Building a CSV uploader is hard.</h1>\n          <div>Tired of people uploading invalid data into your application? Or writing custom import scripts that keep breaking?</div>\n        </div>\n\n        <div className=\"content\">\n          <h1>Drop in an uploader into your app in seconds.</h1>\n          <div>\n            <pre>\n              <code className=\"language-jsx\">\n                {content}\n              </code>\n            </pre>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          <h1>Want to see a demo? Try uploading <a href=\"data.csv\">this file</a>.</h1>\n          <Importer\n            fields={[\n              {\n                label: \"Name\", key: \"name\", validators: [\n                  { validate: \"required\" },\n                ]\n              },\n              {\n                label: \"Email\", key: \"email\", validators: [\n                  { validate: \"required\" },\n                  { validate: \"unique\", error: \"This email is not unique\" },\n                  {\n                    validate: \"regex_matches\",\n                    regex: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                  },\n                ]\n              },\n              {\n                label: \"Phone Number\", key: \"phone_number\", validators: [\n                  { validate: \"required\" },\n                ]\n              },\n              { label: \"City\", key: \"city\" },\n              { label: \"State\", key: \"state\" },\n            ]}\n            onComplete={onComplete}\n          />\n          {ready && (\n            <div style={{ margin: \"0 auto\", maxWidth: \"1200px\" }}>\n              <h4>Check the console for the output!</h4>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}