{"version":3,"sources":["../../src/components/Header.jsx","../../src/components/common.jsx","../../src/components/FileUploader.jsx","../../src/components/HeaderMapperRow.jsx","../../src/components/HeaderMapper.jsx","../../src/utils/index.js","../../src/components/DataEditor.jsx","../../src/contexts/index.js","../../src/validators/index.js","../../src/index.js","App.js","index.js"],"names":["TextEnd","styled","BreadcrumbItem","props","css","Aligned","Header","currentStep","id","steps","past","active","last","index","key","xmlns","width","height","fill","className","viewBox","fillRule","d","Container","TextStyled","styles","Root","Card","Align","Margin","Padded","Table","Row","Col","customCss","Button","color","FileUploader","setFile","useDropzone","getInputProps","useEffect","acceptedFiles","getRootProps","cursor","backgroundColor","padding","margin","muted","flex","style","marginRight","marginBottom","right","variant","outline","percentage","a","b","Math","MappingStatistics","selectedField","total","fieldStatistics","counts","errorTypeCounts","HeaderMapperSelection","options","verticallyCenter","spaceBetween","header","isClearable","isSearchable","value","onChange","setHeader","examples","idx","textAlign","e","HeaderMapperRow","block","headerMapping","isDisabled","onClick","setHeaderMapping","confirmed","ignored","name","selectedHeader","display","flexDirection","justifyContent","HeaderMapper","restart","data","parsed","fields","f","label","hasMissingRequiredFields","missingRequiredFields","headerMappings","statistics","columnIndex","newMappings","setHeaderMappings","danger","bold","marginLeft","disabled","isPresent","isUndefinedOrNull","filterEmptyRows","formattedData","Object","k","buildFinalData","validationResult","removeTemporaryKeys","rowIndexesWithErrors","row","filterInvalidRows","DataEditor","setRowData","useState","validationRef","useRef","setTimeout","gridApi","computeCellStyle","params","border","checked","newValue","_setOnlyShowErrors","newRowData","setOnlyShowErrors","type","htmlFor","onCellValueChanged","rowData","tooltipShowDelay","defaultColDef","minWidth","editable","onGridReady","setGridApi","setGridColumnApi","field","resizable","cellStyle","headerName","tooltipValueGetter","rowIndex","columnName","errors","onBack","onSubmit","ThemeContext","createContext","colors","success","primary","warning","constructor","this","isValid","Error","buildFromDefinition","mapping","regex_matches","required","unique","is_integer","IntegerValidator","definition","FoundValidator","valid","isNaN","fieldValue","message","error","errorType","RegExp","str","regexp","test","hasErrors","fieldKey","allRowIndexes","rowIndexes","r","parseInt","Set","addError","errorsByFieldKeyByRowIndex","hasError","getErrors","computeStatistics","statisticsByFieldKey","headers","isNull","errorsByRowIndex","computeStatisticsForField","length","newFormattedData","output","item","formatData","setFormattedData","newValidationResult","validatorsByFieldKey","validatorDefinition","Validator","validators","v","result","applyValidation","setValidationResult","newStatistics","setStatistics","usedFilters","h","unselectedFields","filter","i","selectedFields","file","Papa","complete","newParsed","setParsed","foundField","buildSuggestedHeaderMappings","setCurrentStep","onComplete","App","setValue","marginTop","validate","regex","maxWidth","mode","navigationBar","statusBar","mainMenuBar","ReactDOM","render","document","getElementById"],"mappings":"6dAGMA,I,YAAUC,KAAH,2FAKPC,GAAiBD,KAAH,6FAGhBE,YACA,OAAIA,EAAJ,OACSC,aAAP,sEAKED,EAAJ,KACSC,aAAP,oGADF,KASEC,GAAUJ,KAAH,oGAMPK,GAAS,SAAC,GAA2B,IAA3B,EAA2B,EAA3B,MAASC,EAAkB,EAAlBA,YACvB,OACE,sBAASC,GAAG,2BACRC,EAAA,KAAU,cACV,IAAMC,EAAOH,EAAb,EACMI,EAASJ,IAAf,EACMK,EAAOC,IAAUJ,SAAvB,EACA,OACE,sBAAgBK,IAAhB,EAA4BJ,KAA5B,EAAwCC,OAAQA,GAAhD,GAEIC,GACA,sBAASG,MAAT,6BAA4CC,MAA5C,KAAuDC,OAAvD,KAAmEC,KAAnE,eAAuFC,UAAvF,sBAAuHC,QAAQ,aAC7H,0BAAMC,SAAN,UAAyBC,EAAE,kIC3C9BC,GAAYtB,KAAH,iFAKTuB,GAAavB,KAAH,+CACnBE,YACA,IAAIsB,EAAJ,GAUA,OATItB,EAAJ,QACEsB,EAAM,MAANA,WAEEtB,EAAJ,SACEsB,EAAM,MAANA,WAEEtB,EAAJ,OACEsB,EAAM,WAANA,QAEF,KAGSC,GAAOzB,KAAH,stHAuJJ0B,GAAO1B,KAAH,2IAMJ2B,GAAQ3B,KAAH,6CAEhBE,YACE,OAAIA,EAAJ,MACSC,aAAP,mDACSD,EAAJ,OACEC,aAAP,yDADK,KAOEyB,GAAS5B,KAAH,+CAEfE,YACE,OAAOC,aAAP,+DACYD,EADZ,WAOO2B,GAAS7B,KAAH,+CAEfE,YACE,OAAOC,aAAP,gEACaD,EADb,YAOO4B,GAAQ9B,KAAH,mIAQL+B,GAAM/B,KAAH,kFAKHgC,GAAMhC,KAAH,+CACZE,YACA,IAAI+B,EAAJ,GAcA,OAbI/B,EAAJ,KACE+B,EAAS,KAAW/B,EAApB+B,KAEAA,EAAS,KAATA,EAEE/B,EAAJ,mBACE+B,EAAS,QAATA,OACAA,EAAS,WAATA,UAEE/B,EAAJ,eACE+B,EAAS,QAATA,OACAA,EAAS,eAATA,iBAEF,KAISC,GAASlC,KAAH,wOAUfE,YACA,IAAIiC,EAAJ,UAYA,MAXA,YAAIjC,UACFiC,UACK,WAAIjC,UACTiC,YACK,cAAIjC,YACTiC,aAGEjC,EAAJ,WACEiC,SAEEjC,EAAJ,QACSC,aAAP,mGAKOA,aAAP,wICvQAiC,IAJYpC,KAAH,gEAIM,SAAC,GAAgB,IAAdqC,EAAc,EAAdA,QACtB,EAAqDC,eAA/C,EAAN,EAAM,gBAAN,EAAM,aAA8BC,EAApC,EAAoCA,cAQpC,OANAC,qBAAU,WACJC,SAAJ,GACEJ,EAAQI,EAARJ,MAED,CAJHG,IAOE,sCAAUE,IAAV,OAAiC,CAACC,OAAD,UAAoBC,gBAAiB,wBACpE,sBAAQC,QAAQ,QACd,0BAAWN,KACX,sBAAQO,OAAO,cACb,sBAAYC,OAAK,GAHrB,gBAOE,0BACE,sBAAKC,KAAK,KACR,0BACE,sBAAKA,KAAK,KACR,yBAAKC,MAAO,CAACC,YAAa,QAASpC,MAAnC,6BAAsEC,MAAtE,KAAiFC,OAAjF,KAA6FC,KAA7F,UAA4GC,UAA5G,uBAA6IC,QAAQ,aACnJ,0BAAMC,SAAN,UAAyBC,EAAE,qIAC3B,0BAAMA,EAAE,4cAGZ,sBAAK2B,KAAK,KACR,wBAAIC,MAAO,CAACE,aAAc,SAD5B,gCAEE,sBAAYJ,OAAK,GAXzB,4BAgBE,sBAAKC,KAAK,KACR,sBAAOI,OAAK,GACV,sBAAQC,QAAR,YAA4BC,SAAO,GA3B/C,uBCfIC,GAAa,SAACC,EAAGC,GACrB,OAAOC,WAAYF,IAAD,IAAXE,IAAP,IAGIC,GAAoB,SAAC,GAAwC,QAAxC,EAAwC,EAAxC,gBAAmBC,EAAqB,EAArBA,cACtCC,EAAQC,EAAd,MACMC,EAAM,UAAGD,EAAH,+BAAGA,EAAf,OACME,EAAe,UAAGF,EAAH,+BAAGA,EAAxB,gBACA,OAAKC,GAAL,EAIE,6BACGH,GAAiB,2CAAgB,2BAAIA,EADxC,SAEIA,GAAiB,6BAAK,2BAF1B,sBAGE,uBAHF,MAIE,6BACE,yBAAKX,MAAO,CAAEC,YAAa,QAAUpC,MAArC,6BAAwEC,MAAxE,KAAmFC,OAAnF,KAA+FC,KAA/F,UAA8GC,UAA9G,yBAAiJC,QAAQ,aACvJ,0BAAME,EAAE,uRAGV,2BAAIkC,GAAWM,EAAQE,EAAT,OAAd,GALF,KAJF,8CAWGC,aACC,6BACE,yBAAKf,MAAO,CAACC,YAAa,QAASpC,MAAnC,6BAAsEC,MAAtE,KAAiFC,OAAjF,KAA6FC,KAA7F,UAA4GC,UAA5G,iBAAuIC,QAAQ,aAC7I,0BAAME,EAAE,+KAdhB,6CAoBG2C,WACC,6BACE,yBAAKf,MAAO,CAACC,YAAa,QAASpC,MAAnC,6BAAsEC,MAAtE,KAAiFC,OAAjF,KAA6FC,KAA7F,UAA4GC,UAA5G,iCAAuJC,QAAQ,aAC7J,0BAAME,EAAE,0RAGR2C,UAAD,KAA0C,8BAAM,2BAAIA,EAAV,OAL7C,+CAMIA,WAAD,KAA2C,8BAAM,2BAAIT,GAAWS,EAAD,MAAd,GAAN,KA5BpD,oDAFS,wBAAP,OAoCEC,GAAwB,SAAC,GAA2D,IAA3D,EAA2D,EAA3D,SAA2D,EAA3D,WAA2D,EAA3D,YAA2D,EAA3D,eAA8CC,EAAa,EAAbA,QAC3E,OACE,6BACE,sBAAQpB,OAAO,UACb,0BACE,sBAAKqB,kBAAL,EAAsBC,cAAY,GAChC,sBAAQtB,OAAO,UAAUuB,UAD3B,KAEE,sBAAQxB,QAAQ,UAChB,yBAAK/B,MAAL,6BAAwCC,MAAxC,KAAmDC,OAAnD,KAA+DC,KAA/D,eAAmFC,UAAnF,oBAAiHC,QAAQ,aACvH,0BAAMC,SAAN,UAAyBC,EAAE,qJAI/B,0BACE,wBAAQiD,aAAR,EAA2BC,cAA3B,EAA+CC,MAA/C,EAAsEN,QAAtE,EAAwFO,SAAUC,OAIxG,0BACE,+BACGC,EAAA,KAAa,cACZ,OACE,wBAAI9D,IAAK+D,GACP,wBAAI3B,MAAO,CAAEL,gBAAF,UAA8BiC,UAA9B,SAAmD9D,MAAO,SADvE,GAIE,wBAAIkC,MAAO,CAAEJ,QAAS,cACnBiC,GAAK,2BANZ,oBAiBNC,GAAkB,SAAC,GAAkF,IAAlF,EAAkF,EAAlF,UAAkF,EAAlF,SAAkF,EAAlF,WAAkF,EAAlF,gBAAkF,EAAlF,iBAA6DjB,EAAqB,EAArBA,gBAChFkB,EAAJ,KA+GA,OA7GEA,EADEC,EAAJ,UAEI,0BACE,0BACE,0BACE,sBAAKd,kBAAL,EAAsBC,cAAY,GAChC,sBAAQtB,OAAO,UAAUuB,UAD3B,KAEE,sBAAQxB,QAAQ,UACd,yBAAK/B,MAAL,6BAAwCC,MAAxC,KAAmDC,OAAnD,KAA+DC,KAA/D,eAAmFC,UAAnF,oBAAiHC,QAAQ,aACvH,0BAAMC,SAAN,UAAyBC,EAAE,qJAIjC,0BACE,wBAAQ6D,YAAR,EAA0BV,MAAOS,EAAcrB,mBAIrD,sBAAKQ,cAAL,EAAkBD,kBAAgB,GAChC,6BACE,yBAAKlB,MAAO,CAACH,OAAQ,UAAWhC,MAAhC,6BAAmEC,MAAnE,KAA8EC,OAA9E,KAA0FC,KAA1F,UAAyGC,UAAzG,iBAAoIC,QAAQ,aAC1I,0BAAME,EAAE,+KAHd,aAQE,sBAAQ8D,QAAS,WACfC,EAAiB,gCAAD,IAEdC,WAAW,OA5BrBL,UAkCSC,EAAJ,QAEH,0BACE,sBAAKd,kBAAgB,GACnB,sBAAQrB,OAAO,UAFnB,IAIE,sBAAKsB,cAAL,EAAkBD,kBAAgB,GAChC,6BACE,yBAAKlB,MAAO,CAACH,OAAQ,UAAWhC,MAAhC,6BAAmEC,MAAnE,KAA8EC,OAA9E,KAA0FC,KAA1F,eAA8GC,UAA9G,uBAA+IC,QAAQ,aACrJ,0BAAME,EAAE,6PACR,0BAAMA,EAAE,gJAJd,WASE,sBAAQ8D,QAAS,WACfC,EAAiB,gCAAD,IAEdxB,cAFe,KAGf0B,SAHe,EAIfC,KAAM,UAnBhBP,UA2BE,0BACE,0BACE,sBACEd,QADF,EAEEG,OAFF,EAGEM,SAHF,EAIEa,eAAgBP,EAJlB,cAKEP,UAAYd,YACVwB,EAAiB,gCAAD,IAEdxB,gBACA0B,SAHe,EAIfC,KAAMlB,SAKd,0BACE,sBACExB,QADF,gBAEEI,MAAO,CACLwC,QADK,OAELC,cAFK,SAGL1E,OAHK,MAIL2E,eAAgB,kBAElB,6BACGV,iBACC,sBAAmBrB,cAAeqB,EAAlC,cAA+DnB,gBAAiBA,KAGpF,6BAEImB,iBACA,sBAAQhC,MAAO,CAAEC,YAAa,QAAUG,QAAxC,UAA0D8B,QAAS,WACjEC,EAAiB,gCAAD,IAAqBC,WAAW,OAJtD,mBAOE,sBAAQhC,QAAR,YAA4BC,SAA5B,EAAoC6B,QAAS,WAC3CC,EAAiB,gCAAD,IAAqBE,SAAS,OAxC1DN,0BAiDA,sBAAQlC,OAAO,UACb,0BAFJ,KCnMI8C,GAAe,SAAC,GAAkH,IAAlH,EAAkH,EAAlH,SAAkH,EAAlH,SAAkH,EAAlH,aAAkH,EAAlH,iBAAkH,EAAlH,oBAAkH,EAAlH,wBAAkH,EAAlH,WAAoGC,EAAc,EAAdA,QAClHC,EAAOC,EAAb,KACM7B,EAAU8B,EAAA,KAAWC,YACzB,MAAO,CACLC,MAAOD,EADF,MAELzB,MAAOyB,EAAEpF,QAIPsF,EAA2BC,SAAjC,EAEA,OACE,6BACE,6BACE,4BAAKL,cAAL,EAFJ,mBAKID,EAAA,QAAY,cAAyB,MAC7BnB,EAAWmB,kBAAqBzE,YAAC,OAAIA,EAA3C,MACM4D,EAAgBoB,MAAtB,GACMvC,EAAkB,CACtBD,MAAOyC,EADe,MAEtBA,WAAYA,iCAAgCrB,EAAhCqB,kCAAgCrB,EAAhCqB,QAEd,OAAO,sBACLzF,IADK,EAEL0F,YAFK,EAGLlC,OAHK,EAILM,SAJK,EAKLM,cALK,EAMLG,iBAAmBH,YACjB,IAAIuB,EAAc,gBAAKH,GACvBpB,gBACAuB,OACAC,MAEFvC,QAZK,EAaLJ,gBAAiBA,OAIvB,sBAAQhB,OAAO,UACb,sBAAOM,OAAK,GACT+C,GACCC,EAAA,KAA0BH,YACxB,OACE,6BACE,sBAAYhD,MAAO,CAAEE,aAAc,QAAUuD,QAA7C,EAAoDC,MAAI,GAAxD,uBACuBV,EADvB,MAEE,yBAAKhD,MAAO,CAAC2D,WAAY,QAAS9F,MAAlC,6BAAqEC,MAArE,KAAgFC,OAAhF,KAA4FC,KAA5F,UAA2GC,UAA3G,gCAAqJC,QAAQ,aAC3J,0BAAME,EAAE,0KAQtB,0BACE,0BACE,sBAAQ8D,QAAR,EAA0B7B,SAAO,GAFrC,SAME,0BACE,sBAAOF,OAAK,GACV,sBAAQyD,SAAR,EAA4C1B,QAA5C,EAAiE9B,QAAQ,WAvDrF,gBCZWyD,GAAatD,YAAD,OAHSA,YAChC,OAAOA,eAAP,IAAqBA,EAEUuD,CAA1B,IAoDMC,GAAmBC,YAC9B,OAAOA,UACJ5F,YAAD,OAAO6F,uBAAuBC,YAAD,MAAtBD,aAA6BC,KAA7BD,OADT,MA4BWE,GAAiB,SAACH,EAAeI,GAC5C,OAhBkCJ,YAIlC,OAHAA,WAAuBhB,mBACdA,EAAP,YAEF,EAYOqB,CAxBwB,SAACL,EAAeI,GAC/C,IAAME,EAAuBF,EAA7B,uBAIA,OAHAJ,EAAgBA,UACbO,YAAD,OAAUD,MAAyBC,EADrCP,aAGOD,GAAP,GAoBES,CAAkBT,GAAD,GADnB,KC7EIU,GAAa,SAAC,GAA8E,IAA9E,EAA8E,EAA9E,gBAA8E,EAA9E,SAA8E,EAA9E,WAA8E,EAA9E,SAA8E,EAA9E,iBAA6DC,EAAiB,EAAjBA,WAC/E,EAA8BC,mBAA9B,yBAAM,EAAN,KAAM,EAAN,KACA,EAA0CA,mBAA1C,yBAAM,GAAN,WACMC,EAAgBC,iBAAtB,GACAD,YAEArF,qBAAU,WACRuF,YAAW,WACTC,eAAO,IAAPA,oBADFD,KAGC,CAJHvF,IAMA,IAKA,EAA6CoF,oBAA7C,sBAAM,EAAN,KAAM,EAAN,KACMK,EAAoBC,YACxB,OACEpB,GAAUoB,gBAAVpB,QACAA,GAAUoB,OADVpB,WAEAe,mBAA+BK,gBAA/BL,MAA2DK,OAH7D,UAKS,CACL/F,MADK,yBAELS,gBAFK,yBAGLuF,OAAQ,oCAGZ,MA0BF,OACE,6BACE,sBAAQrF,OAAO,UACb,2BAAOsF,QAAP,EAAgC3D,SAAWK,aA1BtBuD,YAEzB,MACA,GAFAC,KAEA,EAAc,CACZ,IAAMf,EAAuBF,EAA7B,uBACAkB,EAAatB,UAAqB,qBAAcM,MAAhDgB,WAEAA,IAEFP,gBAkBMQ,CAAkB1D,SAAlB0D,UACCC,KAFH,WAEmBlD,KAFnB,aAEqChF,GAAG,eACxC,2BAAO0C,MAAO,CAAC2D,WAAY,QAAS8B,QAAQ,cALhD,+BAOE,yBAAKzF,MAAO,CAACjC,OAAD,IAAcD,MAAO,QAASG,UAAU,mBAClD,kCACEyH,mBArBoBT,YAG1BP,EAAWO,EAAD,KAAcA,EAAxBP,WAmBMiB,QAFF,EAGEC,iBAHF,EAIEC,cAAe,CACb9F,KADa,EAEb+F,SAFa,IAGbC,UAAU,GAEZC,YA9Daf,YACnBgB,EAAWhB,EAAXgB,KACAC,EAAiBjB,EAAjBiB,aA8DOnD,EAAA,KAAWoD,YACV,OACE,mCACEC,WADF,EAEEC,UAFF,EAGEzI,IAAKuI,EAHP,IAIEG,WAAYH,EAJd,MAKEI,mBAAqBtB,YACnB,IAAMuB,EAAWvB,EAAjB,SACMwB,EAAaxB,SAAnB,MAEA,GAAIL,qBAAJ,GAEE,OADeA,sBAAf,GACO8B,KAAW7E,YAAC,OAAIA,EAAhB6E,gBAAP,OAGJP,MAAOA,EAAMvI,WAMvB,sBAAQiC,OAAO,UACb,0BACE,0BACG8G,GACC,sBAAQzE,QAAR,EAAyB7B,SAAO,GAHtC,SAQE,0BACE,sBAAOF,OAAK,GAxDJ4D,aAAhB,GA0DY,sBAAQ7B,QAAS0E,GACdxC,eADH,8BAEIA,EAAD,aAxDjB,gBC/DWyC,GAAeC,wBAAc,CACxCC,OAAQ,CACNC,QADM,UAENC,QAFM,UAGNC,QAHM,UAINzD,OAAQ,aCNL,G,WACL0D,WAAW,GAAa,qBACtBC,KAAA,a,4CAGFC,SAAO,KACL,MAAM,IAAIC,MAAV,sB,kCAGKC,SAAmB,GACxB,IAAMC,EAAU,CACdC,cADc,GAEdC,SAFc,GAGdC,OAHc,GAIdC,WAAYC,IAEd,KAAMC,cAAN,GACE,MAAM,IAAIR,MAAM,yBAAV,OAAmCQ,EAAzC,WAGF,OAAO,IAAIC,EADYP,EAAQM,EAA/B,WACA,O,KAIG,G,iKACLT,SAAO,GACL,MAAO,CACLW,OACGC,MAAD,WAAsBC,QAFnB,IAE0CA,EAC/CC,QAASf,KAAKU,WAAWM,OAHpB,6BAILC,UAAW,kB,GANV,IAWA,G,oDACLlB,WAAW,GAAa,mCACtB,kBACA,QAFsB,E,4CAKxBE,SAAO,GACL,OAAIa,KAAcd,KAAlB,KACS,CACLY,OADK,EAELG,QAASf,KAAKU,WAAWM,OAFpB,2BAGLC,UAAW,WAGfjB,KAAA,WACO,CAAEY,OAAO,Q,GAfb,I,IAuBA,G,oDACLb,WAAW,GAAa,kCAEtB,kBADA,kBACW,WAAP,MACF,SAAc,aAAd,MAEA,SAAc,IAAImB,OAA0B,aAA5C,MATGC,8BAAP,SAWE,UAPsB,E,4CAUxBlB,SAAO,GAEL,OADgBD,KAAKoB,OAAOC,KAA5B,GAQO,CAAET,OAAO,GANP,CACLA,OADK,EAELG,QAFK,wBAGLE,UAAW,a,GAjBZ,IAwBA,G,iKACLhB,SAAO,GACL,SAOO,CAAEW,OAAO,GANP,CACLA,OADK,EAELG,QAASf,KAAKU,WAAWM,OAFpB,yBAGLC,UAAW,gB,GANZ,IAaA,G,WACLlB,aAAc,qBACZC,KAAA,8B,8CAGFsB,WAAY,WACV,OACEzE,OAAA,KAAYmD,KAAZ,oCAAqDuB,YACnD,OAAO1E,YAAY,6BAAZA,WAAP,KADF,OADF,I,kCAOFK,WAAuB,WACjBsE,EAAJ,GAOA,OANA3E,YAAYmD,KAAZnD,qCAAsD0E,YACpD,IAAME,EAAa5E,YAAY,6BAA/B,IACA2E,EAAgBA,SACdC,OAAgBC,YAAD,OAAOC,SAASD,EADjCF,WAIK,IAAII,IAAX,K,sBAGFC,SAAQ,OACNN,EAAWA,EAAXA,WACAnC,EAAWA,EAAXA,WACMmC,KAAYvB,KAAlB,6BACEA,KAAA,kCAEIZ,KAAYY,KAAK8B,2BAAvB,KACE9B,KAAA,qCAEFA,KAAA,2C,sBAGF+B,SAAQ,KAGN,OAFAR,EAAWA,EAAXA,WACAnC,EAAWA,EAAXA,WAEEmC,KAAYvB,KAAZuB,4BACAnC,KAAYY,KAAK8B,2BAFnB,K,uBAMFE,SAAS,KAGP,OAFAT,EAAWA,EAAXA,WACAnC,EAAWA,EAAXA,WACOY,KAAK8B,2BAA2BP,GAAvC,O,KAoESU,GAAoB,SAAC,EAAD,KAK/B,IAAMC,EAAN,GAaA,OAZgBrF,oBAAiCC,YAAD,OAAOd,EAAvD,MACAmG,SAAiBvH,YACf,GAAKA,EAAL,eAGA,IAAM2G,EAAW3G,gBAAjB,MACAsH,KAzC8B,SAAC,EAAD,KAKhC,IAAMvI,EAAkB,CAAEH,MAAO,GAC3BE,EAAS,CAAE0I,OAAQ,GAoBzB,OAnBAxF,WAAuB5F,YAChBA,EAAL,KACE0C,gBAIJmD,wBAAuCuC,YACrC,IAAME,EAAS+C,EAAf,GACI/C,GAAUA,SAAd,IACE3F,YAEF2F,WAAgB0B,YACVA,eAAJ,EACErH,EAAgBqH,EAAhBrH,cAEAA,EAAgBqH,EAAhBrH,mBAIC,CAAEA,kBAAiBD,UAeS4I,CAA0B,EAAD,EAGxDtF,iCAHFkF,QAMK,CAAEA,uBAAsB1I,MAAOoD,EAAc2F,S,GCzNrC,SAAC,GAIZ,EAJY,MAIZ,IAJY,EAIZ,EAJY,WAGhB5G,EACI,EADJA,OAEA,EAAsC4B,mBAAtC,sBAAM,EAAN,KAAM,EAAN,KACA,EAA4BA,mBAA5B,yBAAM,EAAN,KAAM,EAAN,KACA,EAA0CA,mBAA1C,uBAAM,EAAN,KAAM,EAAN,KACA,EAAoCA,mBAAS,CAAC2E,qBAAD,GAA2B1I,MAAO,OAA/E,mBAAM,EAAN,KAAM,EAAN,KACA,EAA4C+D,mBAA5C,uBAAM,EAAN,KAAM,EAAN,KACA,EAAgDA,mBAAS,IAAzD,uBAAM,EAAN,KAAM,EAAN,KAqBApF,qBAAU,WAER,GAAIuD,GAAUA,EAAd,KAA2B,CACzB,IAAM8G,EJzCc,SAACxG,EAAgBP,GAEzC,IADA,IAAMgH,EAAN,GADkD,WAEzCrD,GACP,IAAMsD,EAAN,GACMvF,EAAM1B,EAAZ,GACAoB,wBAAqCC,YACnC,IAAMlC,EAAgBoB,EAAtB,GACME,EAActB,EAApB,YACIA,EAAJ,gBACE8H,EAAK9H,gBAAL8H,OAA0CvF,EAA1CuF,OAGJA,WAAgBtD,EAAhBsD,EACAD,WAXOrD,EAAT,EAAuBA,EAAW3D,EAAlC,OAA+C2D,IAAY,EAAlDA,GAaT,SI0B6BuD,CAAW3G,EAAgBN,EAApD,MACAkH,QAED,CANHzK,IAQAA,qBAAU,WACR,GAAIyE,SAAJ,EAA8B,CAC5B,IAAMiG,ED8FmB,SAACjG,EAAejB,GAC7C,IAAMmH,EAAN,GACAnH,WAAgBoD,YACd+D,EAAqB/D,EAArB+D,QACK/D,EAAL,YAIAA,sBAA0BgE,YACxBD,EAAqB/D,EAArB+D,UACEE,uBADFF,UAMJ,IAAM9F,EAAmB,IAAzB,GAiBA,OAhBArB,WAAgBoD,YACdnC,WAAsB,cACpB,GAAMmC,SAAN,GAGA,IAAM5E,EAAQgD,EAAI4B,EAAlB,KACmB+D,EAAqB/D,EAAxC,KAEAkE,SAAoBC,YAClB,IAAMC,EAASD,UAAf,GACKC,EAAL,OACEnG,WAA0B+B,EAA1B/B,mBAKR,EC9HgCoG,CAAgBxG,EAA5C,GACAyG,KACA,IAAMC,EAAgBrB,GAAkBrF,EAAeZ,EAAvD,GACAuH,QAED,CAPHpL,IAkBA,IATA,IAAMqL,EAAc3G,oBACb4G,YAAC,OAAIzH,EADQa,cAEV4G,YAAC,OAAKA,EAAD,SAAcA,EAFT5G,sBAGb4G,YAAC,OAAIA,gBAHZ,SAIMC,EAAmB/H,EAAA,QAAcgI,YACrC,OAAOH,UAAoBG,EAApBH,KAAP,KAGEjF,EAAJ,GACSqF,EAAT,EAAgBA,EAAhB,IAAyBA,IACvBrF,OAAa,CAAEa,SAAUwE,IAG3B,IAAMzB,EAAUtF,oBAET4G,YAAC,OAAIzH,EAFIa,cAGN4G,YAAC,OAAIA,EAHC5G,kBAIT4G,YAAC,OAAIA,gBAJZ,SAKMI,EAAiBlI,EAAA,QAAcC,YACnC,OAAOuG,UAAgBvG,EAAhBuG,MAAP,KAGIpG,EAAwBJ,EAAA,QAAcC,YAAC,UJNfmD,EIMAnD,GJL1BmD,YAAoBA,oBAAxB,MACqBA,mBAAuBmE,YAAD,MAAzC,aAAgDA,cAFpBnE,SIMA,QAA8CnD,YAC1E,WAAOiI,OAAmBjI,YAAC,OAAIA,EAAxBiI,eAAuCjI,EAAvCiI,QAET,OACE,kBAACpE,GAAD,cACE,0BACE,0BACE,sBAAQtJ,MAAO,CAAC,SAAU,QAAS,SAAnC,YAA0DF,YAAaA,IACtEA,OACC,6BACE,sBAAc+B,QA3DT8L,YACfC,aAAiB,CACfC,SAAWC,YACTC,KACA9H,EJdoC,SAACT,EAAQwG,GACnD,IAAMnG,EAAN,GA4BA,OA3BAmG,WAAgB,cACd,IAAMgC,EAAaxI,EAAA,MAAaC,YAS9B,OARsBA,gDAAtB,MAIyB5B,4CAAzB,OAOF,IAIAgC,KAA8B,CAC5BE,cACAhB,KAF4B,EAG5B3B,cAAe,CACbY,MAAOgK,EADM,IAEbtI,MAAOsI,EAAWtI,YAKxB,EIfwBuI,CAA6BzI,EAAQsI,OAAvD7H,KACAiI,WAuDM,sBAAQ5L,OAAO,iBACb,4BAHJ,qCAKE,sBACEwD,WADF,EAEEW,cAAeA,aAFjB,EAGEjB,OAHF,EAIEK,eAJF,EAKEgB,iBALF,EAMEwC,SAAU,WACR8E,EAAWvH,GAAeH,EAA1B0H,KAEFhH,WAAY,cACV,IAAMY,EAAa,GAAH,OAAhB,GACAA,OACA0E,SAKP3M,OACC,sBACEgG,WADF,EAEEP,OAFF,EAGEC,OAHF,EAIEK,eAJF,EAKED,sBALF,EAMEK,kBANF,EAOEZ,QAjGI,WACd6I,KACAH,QACAtB,MACAW,EAAc,CAACrB,qBAAD,GAA2B1I,MAAO,OAChD4C,MACAiH,EAAoB,IAApBA,KA4FUiB,WAAY,WACVD,QAILpO,OACC,sBACEgG,WADF,EAEEW,cAFF,EAGEjB,OAHF,EAIEK,eAJF,EAKEgB,iBALF,EAMEuC,OAAQ,WACN8E,MAEF7E,SAAU,WACR8E,EAAWvH,GAAeH,EAA1B0H,KAEFhH,WAAY,cACV,IAAMkF,EAAmB,aAAzB,GACAA,OACAI,Y,SC/ED2B,I,YA1DH,WACV,MAA0BhH,mBAAS,MAAnC,mBAAOpD,EAAP,KAAcqK,EAAd,KAIA,OACE,yBAAK5L,MAAO,CAAC6L,UAAW,OAAQ3L,aAAc,SAC5C,kBAAC,GAAD,CACE6C,OAAQ,CACN,CACEE,MAAO,OAAQrF,IAAK,OAAQyM,WAAY,CACtC,CAAEyB,SAAU,cAGhB,CACE7I,MAAO,QAASrF,IAAK,QAASyM,WAAY,CACxC,CAAEyB,SAAU,YACZ,CAAEA,SAAU,SAAU1D,MAAO,4BAC7B,CACE0D,SAAU,gBACVC,MAAO,2JAIb,CACE9I,MAAO,eAAgBrF,IAAK,eAAgByM,WAAY,CACtD,CAAEyB,SAAU,cAGhB,CACE7I,MAAO,SAAUrF,IAAK,UAExB,CACEqF,MAAO,OAAQrF,IAAK,QAEtB,CACEqF,MAAO,QAASrF,IAAK,UAGzB8N,WArCa,SAAC7I,GAClB+I,EAAS/I,MAsCNtB,GACC,yBAAKvB,MAAO,CAAEH,OAAQ,SAAUmM,SAAU,WACxC,sCACA,kBAAC,KAAD,CACEC,KAAK,OACLC,eAAe,EACfC,WAAW,EACXC,aAAa,EACb7K,MAAOA,EACPC,SAAU,SAAA8I,GAAC,OAAIsB,EAAStB,UClDpC+B,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1e1e4406.chunk.js","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst TextEnd = styled.section`\n  text-align: right;\n  margin-bottom: 20px;\n`;\n\nconst BreadcrumbItem = styled.span`\n  font-weight: thin;\n  margin-left: 20px;\n  ${props => {\n    if (props.active) {\n      return css`\n        font-weight: bold;\n      `\n    }\n\n    if (props.past) {\n      return css`\n        font-weight: bold;\n        color: #2ecc71;\n      `\n    }\n  }};\n`\n\nconst Aligned = styled.svg`\n  margin-bottom: 3px;\n  margin-left: 20px;\n  fill: grey;\n`\n\nconst Header = ({ steps, currentStep }) => {\n  return (\n    <TextEnd id=\"csv-importer-nav-header\">\n      { steps.map((step, index) => {\n        const past = currentStep > index;\n        const active = currentStep === index;\n        const last = index === steps.length - 1;\n        return (\n          <BreadcrumbItem key={index} past={past} active={active}>\n            {step}\n            {!last && (\n              <Aligned xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-chevron-right\" viewBox=\"0 0 16 16\">\n                <path fillRule=\"evenodd\" d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\" />\n              </Aligned>\n            )}\n          </BreadcrumbItem>\n        );\n      }) }\n    </TextEnd>\n  );\n};\n\nexport default Header;\n","import styled, { css } from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 1200px;\n`\n\nexport const TextStyled = styled.div`\n  ${props => {\n    let styles = {};\n    if (props.muted) {\n      styles['color'] = \"#7f8c8d\";\n    }\n    if (props.danger) {\n      styles['color'] = \"#e74c3c\";\n    }\n    if (props.bold) {\n      styles['fontWeight'] = \"bold\";\n    }\n    return styles\n  }}\n`\nexport const Root = styled.div`\n  animation : none;\n  animation-delay : 0;\n  animation-direction : normal;\n  animation-duration : 0;\n  animation-fill-mode : none;\n  animation-iteration-count : 1;\n  animation-name : none;\n  animation-play-state : running;\n  animation-timing-function : ease;\n  backface-visibility : visible;\n  background : 0;\n  background-attachment : scroll;\n  background-clip : border-box;\n  background-color : transparent;\n  background-image : none;\n  background-origin : padding-box;\n  background-position : 0 0;\n  background-position-x : 0;\n  background-position-y : 0;\n  background-repeat : repeat;\n  background-size : auto auto;\n  border : 0;\n  border-style : none;\n  border-width : medium;\n  border-color : inherit;\n  border-bottom : 0;\n  border-bottom-color : inherit;\n  border-bottom-left-radius : 0;\n  border-bottom-right-radius : 0;\n  border-bottom-style : none;\n  border-bottom-width : medium;\n  border-collapse : separate;\n  border-image : none;\n  border-left : 0;\n  border-left-color : inherit;\n  border-left-style : none;\n  border-left-width : medium;\n  border-radius : 0;\n  border-right : 0;\n  border-right-color : inherit;\n  border-right-style : none;\n  border-right-width : medium;\n  border-spacing : 0;\n  border-top : 0;\n  border-top-color : inherit;\n  border-top-left-radius : 0;\n  border-top-right-radius : 0;\n  border-top-style : none;\n  border-top-width : medium;\n  bottom : auto;\n  box-shadow : none;\n  box-sizing : content-box;\n  caption-side : top;\n  clear : none;\n  clip : auto;\n  color : inherit;\n  columns : auto;\n  column-count : auto;\n  column-fill : balance;\n  column-gap : normal;\n  column-rule : medium none currentColor;\n  column-rule-color : currentColor;\n  column-rule-style : none;\n  column-rule-width : none;\n  column-span : 1;\n  column-width : auto;\n  content : normal;\n  counter-increment : none;\n  counter-reset : none;\n  cursor : auto;\n  direction : ltr;\n  display : inline;\n  empty-cells : show;\n  float : none;\n  font : normal;\n  font-family : inherit;\n  font-size : 16px !important;\n  font-style : normal;\n  font-variant : normal;\n  font-weight : normal;\n  height : auto;\n  hyphens : none;\n  left : auto;\n  letter-spacing : normal;\n  line-height : normal;\n  list-style : none;\n  list-style-image : none;\n  list-style-position : outside;\n  list-style-type : disc;\n  margin : 0;\n  margin-bottom : 0;\n  margin-left : 0;\n  margin-right : 0;\n  margin-top : 0;\n  max-height : none;\n  max-width : none;\n  min-height : 0;\n  min-width : 0;\n  opacity : 1;\n  orphans : 0;\n  outline : 0;\n  outline-color : invert;\n  outline-style : none;\n  outline-width : medium;\n  overflow : visible;\n  overflow-x : visible;\n  overflow-y : visible;\n  padding : 0;\n  padding-bottom : 0;\n  padding-left : 0;\n  padding-right : 0;\n  padding-top : 0;\n  page-break-after : auto;\n  page-break-before : auto;\n  page-break-inside : auto;\n  perspective : none;\n  perspective-origin : 50% 50%;\n  position : static;\n  right : auto;\n  tab-size : 8;\n  table-layout : auto;\n  text-align : inherit;\n  text-align-last : auto;\n  text-decoration : none;\n  text-decoration-color : inherit;\n  text-decoration-line : none;\n  text-decoration-style : solid;\n  text-indent : 0;\n  text-shadow : none;\n  text-transform : none;\n  top : auto;\n  transform : none;\n  transform-style : flat;\n  transition : none;\n  transition-delay : 0s;\n  transition-duration : 0s;\n  transition-property : none;\n  transition-timing-function : ease;\n  unicode-bidi : normal;\n  vertical-align : baseline;\n  visibility : visible;\n  white-space : normal;\n  widows : 0;\n  width : auto;\n  word-spacing : normal;\n  z-index : auto;\n  all: initial;\n  all: unset;\n`\n\nexport const Card = styled.div`\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n  padding: 10px;\n  border-radius: 5px;\n`\n\nexport const Align = styled.div`\n${\n  props => {\n    if (props.right) {\n      return css`text-align: right`\n    } else if (props.center) {\n      return css`text-align: center`\n    }\n  }\n}\n`\n\nexport const Margin = styled.div`\n  ${\n    props => {\n      return css`\n        margin: ${props.margin};\n      `;\n    }\n  }\n`\n\nexport const Padded = styled.div`\n  ${\n    props => {\n      return css`\n        padding: ${props.padding};\n      `;\n    }\n  }\n`\n\nexport const Table = styled.table`\n  border: 1px solid #aaa;\n  width: 100%;\n  th, td {\n    border: 1px solid #aaa;\n  }\n`\n\nexport const Row = styled.div`\n  flex-direction: row;\n  display: flex;\n`\n\nexport const Col = styled.div`\n  ${props => {\n    let customCss = {};\n    if (props.flex) {\n      customCss['flex'] = props.flex;\n    } else {\n      customCss['flex'] = 1;\n    }\n    if (props.verticallyCenter) {\n      customCss['display'] = 'flex';\n      customCss['alignItems'] = 'center';\n    }\n    if (props.spaceBetween) {\n      customCss['display'] = 'flex';\n      customCss['justifyContent'] = 'space-between';\n    }\n    return customCss;\n  }}\n`\n\nexport const Button = styled.button`\n  border: none;\n  padding: 10px 20px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  font-weight: bold;\n  border-radius: 5px;\n\n  ${props => {\n    let color = \"#2980b9\";\n    if (props.variant === 'success') {\n      color = 'green';\n    } else if (props.variant === 'danger') {\n      color = '#e74c3c';\n    } else if (props.variant === \"secondary\") {\n      color = '#7f8c8d';\n    }\n\n    if (props.disabled) {\n      color += 'bb';\n    }\n    if (props.outline) {\n      return css`\n        border: 1px solid ${color};\n        color: ${color};\n      `;\n    } else {\n      return css`\n        color: white;\n        background-color: ${color};\n        border: 1px solid ${color};\n      `;\n    }\n  }}\n`","import React, { useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components'\nimport { Button, Row, Col, Align, Card, Padded, Margin, TextStyled } from './common'\n\n\nconst StyledDiv = styled.div`\n  // Some styling here\n`\n\nconst FileUploader = ({ setFile }) => {\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone();\n\n  useEffect(() => {\n    if (acceptedFiles.length > 0) {\n      setFile(acceptedFiles[0])\n    }\n  }, [acceptedFiles]);\n\n  return (\n    <Card {...getRootProps()} style={{cursor: 'pointer', backgroundColor: \"rgb(250, 250, 250)\"}}>\n      <Padded padding=\"30px\">\n        <input {...getInputProps()} />\n        <Margin margin=\"0 0 30px 0\">\n          <TextStyled muted>\n          Pick a file\n          </TextStyled>\n        </Margin>\n        <Row>\n          <Col flex=\"3\">\n            <Row>\n              <Col flex=\"1\">\n                <svg style={{marginRight: \"20px\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"#7f8c8d\" className=\"bi bi-cloud-arrow-up\" viewBox=\"0 0 16 16\">\n                  <path fillRule=\"evenodd\" d=\"M7.646 5.146a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 6.707V10.5a.5.5 0 0 1-1 0V6.707L6.354 7.854a.5.5 0 1 1-.708-.708l2-2z\" />\n                  <path d=\"M4.406 3.342A5.53 5.53 0 0 1 8 2c2.69 0 4.923 2 5.166 4.579C14.758 6.804 16 8.137 16 9.773 16 11.569 14.502 13 12.687 13H3.781C1.708 13 0 11.366 0 9.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383zm.653.757c-.757.653-1.153 1.44-1.153 2.056v.448l-.445.049C2.064 6.805 1 7.952 1 9.318 1 10.785 2.23 12 3.781 12h8.906C13.98 12 15 10.988 15 9.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 4.825 10.328 3 8 3a4.53 4.53 0 0 0-2.941 1.1z\" />\n                </svg>\n              </Col>\n              <Col flex=\"6\">\n                <h5 style={{marginBottom: \"10px\"}}>Drag and drop your file here</h5>\n                <TextStyled muted>Limit 20MB • CSV</TextStyled>\n              </Col>\n            </Row>\n\n          </Col>\n          <Col flex=\"1\">\n            <Align right>\n              <Button variant=\"secondary\" outline>Browse Files</Button>\n            </Align>\n          </Col>\n        </Row>\n      </Padded>\n    </Card>\n  );\n};\n\nexport default FileUploader;\n","import React from 'react';\nimport Select from 'react-select';\nimport { Card, Margin, Button, Row, Col, Padded, Table, Align } from './common'\n\nconst percentage = (a, b) => {\n  return Math.round((a / b * 100) * 10) / 10;\n}\n\nconst MappingStatistics = ({ fieldStatistics, selectedField, }) => {\n  const total = fieldStatistics.total;\n  const counts = fieldStatistics.statistics?.counts;\n  const errorTypeCounts = fieldStatistics.statistics?.errorTypeCounts;\n  if (!counts || !errorTypeCounts) {\n    return <div></div>\n  }\n  return (\n    <div>\n      {selectedField && <div>Matched to <b>{selectedField.label}</b></div>}\n      {!selectedField && <div><b>No match detected</b></div>}\n      <br />\n      <div>\n        <svg style={{ marginRight: \"10px\" }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#7f8c8d\" className=\"bi bi-info-circle-fill\" viewBox=\"0 0 16 16\">\n          <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\" />\n        </svg>\n\n        <b>{percentage(total - counts.isNull, total)}%</b> of your rows have a value for this column\n      </div>\n      {errorTypeCounts.total === 0 && (\n        <div>\n          <svg style={{marginRight: \"10px\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#2ecc71\" className=\"bi bi-check-lg\" viewBox=\"0 0 16 16\">\n            <path d=\"M13.485 1.431a1.473 1.473 0 0 1 2.104 2.062l-7.84 9.801a1.473 1.473 0 0 1-2.12.04L.431 8.138a1.473 1.473 0 0 1 2.084-2.083l4.111 4.112 6.82-8.69a.486.486 0 0 1 .04-.045z\" />\n          </svg>\n\n          All rows pass validation for this column.\n        </div>\n      )}\n      {errorTypeCounts.total > 0 && (\n        <div>\n          <svg style={{marginRight: \"10px\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#f39c12\" className=\"bi bi-exclamation-diamond-fill\" viewBox=\"0 0 16 16\">\n            <path d=\"M9.05.435c-.58-.58-1.52-.58-2.1 0L.436 6.95c-.58.58-.58 1.519 0 2.098l6.516 6.516c.58.58 1.519.58 2.098 0l6.516-6.516c.58-.58.58-1.519 0-2.098L9.05.435zM8 4c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995A.905.905 0 0 1 8 4zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\n          </svg>\n\n          {(errorTypeCounts.total / total < 0.02) && <span><b>{errorTypeCounts.total}</b> rows fail validation (repair on next step)</span>}\n          {(errorTypeCounts.total / total >= 0.02) && <span><b>{percentage(errorTypeCounts.total, total)}%</b> of rows fail validation (repair on next step)</span>}\n        </div>\n      )}\n    </div>\n  );\n}\nconst HeaderMapperSelection = ({header, examples, setHeader, selectedHeader, options}) => {\n  return (\n    <div>\n      <Margin margin=\"20px 0\">\n        <Row>\n          <Col verticallyCenter spaceBetween>\n            <Margin margin=\"0 10px\">{header.slice(0, 30)}</Margin>\n            <Padded padding=\"0 20px\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-right\" viewBox=\"0 0 16 16\">\n              <path fillRule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\" />\n            </svg>\n            </Padded>\n          </Col>\n          <Col>\n            <Select isClearable={true} isSearchable={true} value={selectedHeader} options={options} onChange={setHeader} />\n          </Col>\n        </Row>\n      </Margin>\n      <Table>\n        <tbody>\n          {examples.map((e, idx) => {\n            return (\n              <tr key={idx}>\n                <td style={{ backgroundColor: '#ecf0f1', textAlign: 'center', width: \"40px\" }}>\n                  {idx}\n                </td>\n                <td style={{ padding: '10px 20px' }}>\n                  {e || <i>No Data</i>}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nconst HeaderMapperRow = ({options, header, examples, headerMapping, setHeaderMapping, fieldStatistics}) => {\n  let block = null;\n  if (headerMapping.confirmed) {\n    block = (\n      <Row>\n        <Col>\n          <Row>\n            <Col verticallyCenter spaceBetween>\n              <Margin margin=\"0 10px\">{header.slice(0, 30)}</Margin>\n              <Padded padding=\"0 20px\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-right\" viewBox=\"0 0 16 16\">\n                  <path fillRule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\" />\n                </svg>\n              </Padded>\n            </Col>\n            <Col>\n              <Select isDisabled={true} value={headerMapping.selectedField} />\n            </Col>\n          </Row>\n        </Col>\n        <Col spaceBetween verticallyCenter>\n          <div>\n            <svg style={{margin: \"0 10px\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#2ecc71\" className=\"bi bi-check-lg\" viewBox=\"0 0 16 16\">\n              <path d=\"M13.485 1.431a1.473 1.473 0 0 1 2.104 2.062l-7.84 9.801a1.473 1.473 0 0 1-2.12.04L.431 8.138a1.473 1.473 0 0 1 2.084-2.083l4.111 4.112 6.82-8.69a.486.486 0 0 1 .04-.045z\" />\n            </svg>\n            Confirmed\n          </div>\n\n          <Button onClick={() => {\n            setHeaderMapping({\n              ...headerMapping,\n              confirmed: false,\n            })\n          }}>Edit</Button>\n        </Col>\n      </Row>\n    );\n  } else if (headerMapping.ignored) {\n    block = (\n      <Row>\n        <Col verticallyCenter>\n          <Margin margin=\"0 10px\">{ header }</Margin>\n        </Col>\n        <Col spaceBetween verticallyCenter>\n          <div>\n            <svg style={{margin: \"0 10px\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-eye-slash-fill\" viewBox=\"0 0 16 16\">\n              <path d=\"m10.79 12.912-1.614-1.615a3.5 3.5 0 0 1-4.474-4.474l-2.06-2.06C.938 6.278 0 8 0 8s3 5.5 8 5.5a7.029 7.029 0 0 0 2.79-.588zM5.21 3.088A7.028 7.028 0 0 1 8 2.5c5 0 8 5.5 8 5.5s-.939 1.721-2.641 3.238l-2.062-2.062a3.5 3.5 0 0 0-4.474-4.474L5.21 3.089z\" />\n              <path d=\"M5.525 7.646a2.5 2.5 0 0 0 2.829 2.829l-2.83-2.829zm4.95.708-2.829-2.83a2.5 2.5 0 0 1 2.829 2.829zm3.171 6-12-12 .708-.708 12 12-.708.708z\" />\n            </svg>\n            Ignored\n          </div>\n\n          <Button onClick={() => {\n            setHeaderMapping({\n              ...headerMapping,\n              selectedField: null,\n              ignored: false,\n              name: null,\n            })\n          }}>Edit</Button>\n        </Col>\n      </Row>\n    );\n  } else {\n    block = (\n      <Row>\n        <Col>\n          <HeaderMapperSelection\n            options={options}\n            header={header}\n            examples={examples}\n            selectedHeader={headerMapping.selectedField}\n            setHeader={(selectedField) => {\n              setHeaderMapping({\n                ...headerMapping,\n                selectedField,\n                ignored: false,\n                name: header,\n              })\n            }}\n          />\n        </Col>\n        <Col>\n          <Padded\n            padding=\"20px 0 0 20px\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: \"90%\",\n              justifyContent: \"space-between\"\n            }}>\n            <div>\n              {headerMapping.selectedField && (\n                <MappingStatistics selectedField={headerMapping.selectedField} fieldStatistics={fieldStatistics} />\n              )}\n            </div>\n            <div>\n              {\n                headerMapping.selectedField && \n                <Button style={{ marginRight: '10px' }} variant=\"success\" onClick={() => {\n                  setHeaderMapping({ ...headerMapping, confirmed: true });\n                }}>Confirm mapping</Button>\n              }\n              <Button variant=\"secondary\" outline onClick={() => {\n                setHeaderMapping({ ...headerMapping, ignored: true });\n              }}>Ignore this column</Button>\n            </div>\n          </Padded>\n        </Col>\n      </Row>\n    );\n  }\n  return (\n    <Margin margin=\"20px 0\">\n      <Card>{block}</Card>\n    </Margin>\n  );\n}\nexport default HeaderMapperRow;","import React from 'react';\nimport HeaderMapperRow from './HeaderMapperRow';\nimport { Button, Align, Margin, TextStyled, Col, Row } from './common'\n\nconst HeaderMapper = ({ parsed, fields, statistics, headerMappings, setHeaderMappings, missingRequiredFields, onComplete, restart }) => {\n  const data = parsed.data;\n  const options = fields.map(f => {\n    return {\n      label: f.label,\n      value: f.key,\n    }\n  });\n\n  const hasMissingRequiredFields = missingRequiredFields.length > 0;\n\n  return (\n    <div>\n      <div>\n        <h5>{parsed.data.length - 1} Rows Imported</h5>\n      </div>\n      {\n        data[0].map((header, columnIndex) => {\n          const examples = data.slice(1, 4).map(d => d[columnIndex]);\n          const headerMapping = headerMappings[columnIndex] || {};\n          const fieldStatistics = {\n            total: statistics.total,\n            statistics: statistics.statisticsByFieldKey[headerMapping.selectedField?.value],\n          }\n          return <HeaderMapperRow\n            key={columnIndex}\n            columnIndex={columnIndex}\n            header={header}\n            examples={examples}\n            headerMapping={headerMapping}\n            setHeaderMapping={(headerMapping) => {\n              let newMappings = { ...headerMappings }\n              headerMapping.columnIndex = columnIndex;\n              newMappings[columnIndex] = headerMapping\n              setHeaderMappings(newMappings);\n            }}\n            options={options}\n            fieldStatistics={fieldStatistics}\n          />\n        })\n      }\n      <Margin margin=\"20px 0\">\n        <Align right>\n          {hasMissingRequiredFields && (\n            missingRequiredFields.map(f => {\n              return (\n                <div>\n                  <TextStyled style={{ marginBottom: \"15px\" }} danger bold>\n                    Missing mapping for {f.label}\n                    <svg style={{marginLeft: \"10px\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#e74c3c\" className=\"bi bi-exclamation-circle-fill\" viewBox=\"0 0 16 16\">\n                      <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\" />\n                    </svg>\n                  </TextStyled>\n                </div>\n              );\n            })\n          )}\n        </Align>\n        <Row>\n          <Col>\n            <Button onClick={restart} outline>\n              Back\n            </Button>\n          </Col>\n          <Col>\n            <Align right>\n              <Button disabled={hasMissingRequiredFields} onClick={onComplete} variant=\"primary\">\n                Review\n              </Button>\n            </Align>\n          </Col>\n        </Row>\n      </Margin>\n    </div>\n  );\n};\n\nexport default HeaderMapper;\n","export const isUndefinedOrNull = (a) => {\n  return a === null || a === undefined;\n}\nexport const isPresent = (a) => !isUndefinedOrNull(a);\n\nexport const formatData = (headerMappings, data) => {\n  const output = []\n  for (let rowIndex = 1; rowIndex < data.length; rowIndex++) {\n    const item = {}\n    const row = data[rowIndex]\n    Object.keys(headerMappings).forEach((k) => {\n      const headerMapping = headerMappings[k]\n      const columnIndex = headerMapping.columnIndex\n      if (headerMapping.selectedField) {\n        item[headerMapping.selectedField.value] = row[columnIndex]\n      }\n    })\n    item.rowIndex = rowIndex - 1\n    output.push(item)\n  }\n  return output\n}\n\nexport const buildSuggestedHeaderMappings = (fields, headers) => {\n  const headerMappings = {}\n  headers.forEach((header, columnIndex) => {\n    const foundField = fields.find((f) => {\n      const normalizedKey = f.key\n        .toLowerCase()\n        .replace('_', '')\n        .replace(' ', '')\n      const normalizedHeader = header\n        .toLowerCase()\n        .replace('_', '')\n        .replace(' ', '')\n      return normalizedKey === normalizedHeader\n    })\n\n    if (!foundField) {\n      return\n    }\n\n    headerMappings[columnIndex] = {\n      columnIndex,\n      name: header,\n      selectedField: {\n        value: foundField.key,\n        label: foundField.label\n      }\n    }\n  })\n  // create header mappings (columnIndex => {columnIndex, name: inputHeader, selectedField: {value: '', label: ''}})\n  return headerMappings\n}\n\nexport const filterEmptyRows = (formattedData) => {\n  return formattedData.filter(\n    (d) => Object.keys(d).filter((k) => k !== 'rowIndex').length > 0\n  )\n}\n\nexport const filterInvalidRows = (formattedData, validationResult) => {\n  const rowIndexesWithErrors = validationResult.rowIndexesWithErrors()\n  formattedData = formattedData.filter(\n    (row) => !rowIndexesWithErrors.has(row.rowIndex)\n  )\n  return filterEmptyRows(formattedData)\n}\n\nexport const removeTemporaryKeys = (formattedData) => {\n  formattedData.forEach((f) => {\n    delete f.rowIndex\n  })\n  return formattedData\n}\n\nexport const fieldIsRequired = (field) => {\n  if (field.validators && field.validators.length > 0) {\n    const isRequired = field.validators.find((v) => v.validate === 'required')\n    return !!isRequired\n  }\n  return false\n}\n\nexport const buildFinalData = (formattedData, validationResult) => {\n  return removeTemporaryKeys(\n    filterInvalidRows(filterEmptyRows(formattedData), validationResult)\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { Button, Margin, Align, Row, Col } from './common';\nimport { filterEmptyRows, isPresent } from '../utils';\n\n\nconst DataEditor = ({ formattedData, fields, onSubmit, onBack, validationResult, setRowData }) => {\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const validationRef = useRef(validationResult);\n  validationRef.current = validationResult;\n\n  useEffect(() => {\n    setTimeout(() => {\n      gridApi?.redrawRows();\n    }, 0);\n  }, [validationResult]);\n\n  const onGridReady = (params) => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n  };\n\n  const [onlyShowErrors, _setOnlyShowErrors] = useState(false);\n  const computeCellStyle = (params) => {\n    if (\n      isPresent(params.column.colDef.field) &&\n      isPresent(params.data.rowIndex) &&\n      validationRef.current.hasError(params.column.colDef.field, params.data.rowIndex)\n    ) {\n      return {\n        color: 'rgba(192, 57, 43, 1.0)',\n        backgroundColor: 'rgba(231, 76, 60, 0.3)',\n        border: '1px solid rgba(192, 57, 43, 1.0)',\n      }\n    }\n    return null;\n  }\n\n  const setOnlyShowErrors = (newValue) => {\n    _setOnlyShowErrors(newValue);\n    let newRowData;\n    if (newValue) {\n      const rowIndexesWithErrors = validationResult.rowIndexesWithErrors();\n      newRowData = formattedData.filter((_, index) => rowIndexesWithErrors.has(index));\n    } else {\n      newRowData = formattedData;\n    }\n    gridApi.setRowData(newRowData);\n  }\n\n  const onCellValueChanged = (params) => {\n    // Change the data and revalidate the entire dataset.\n    // Because some validations are global validations.\n    setRowData(params.data, params.rowIndex);\n  }\n\n  const shouldShowSubmit = () => {\n    const hasData = filterEmptyRows(formattedData).length > 0;\n    return hasData;\n  }\n\n  return (\n    <div>\n      <Margin margin=\"20px 0\">\n        <input checked={onlyShowErrors} onChange={(e) => {\n          setOnlyShowErrors(e.target.checked);\n        }} type=\"checkbox\" name=\"row-errors\" id=\"row-errors\" />\n        <label style={{marginLeft: '10px'}} htmlFor=\"row-errors\">Only show rows with errors</label>\n      </Margin>\n      <div style={{height: 500, width: '100%'}} className=\"ag-theme-alpine\">\n        <AgGridReact\n          onCellValueChanged={onCellValueChanged}\n          rowData={formattedData}\n          tooltipShowDelay={0}\n          defaultColDef={{\n            flex: 1,\n            minWidth: 100,\n            editable: true,\n          }}\n          onGridReady={onGridReady}\n        >\n          {fields.map(field => {\n            return (\n              <AgGridColumn\n                resizable={true}\n                cellStyle={computeCellStyle}\n                key={field.key}\n                headerName={field.label}\n                tooltipValueGetter={(params) => {\n                  const rowIndex = params.rowIndex;\n                  const columnName = params.colDef.field;\n\n                  if (validationRef.current.hasError(columnName, rowIndex)) {\n                    const errors = validationRef.current.getErrors(columnName, rowIndex);\n                    return errors.map(e => e.message).join(\", \");\n                  }\n                }}\n                field={field.key}\n              ></AgGridColumn>\n            );\n          })}\n        </AgGridReact>\n      </div>\n      <Margin margin=\"20px 0\">\n        <Row>\n          <Col>\n            {onBack && (\n              <Button onClick={onBack} outline>\n                Back\n              </Button>\n            )}\n          </Col>\n          <Col>\n            <Align right>\n              {shouldShowSubmit() && (\n                <Button onClick={onSubmit}>\n                  {validationResult.hasErrors() && \"Upload Rows Without Errors\"}\n                  {!validationResult.hasErrors() && \"Upload\"}\n                </Button>\n              )}\n            </Align>\n          </Col>\n        </Row>\n      </Margin>\n    </div>\n  );\n};\n\nexport default DataEditor;\n","import { createContext } from 'react'\nexport const ThemeContext = createContext({\n  colors: {\n    success: '#2ecc71',\n    primary: '#3498db',\n    warning: '#f39c12',\n    danger: '#e74c3c'\n  }\n})\n","export class Validator {\n  constructor(definition) {\n    this.definition = definition\n  }\n\n  isValid(fieldValue, row) {\n    throw new Error('Not Implemented')\n  }\n\n  static buildFromDefinition(definition) {\n    const mapping = {\n      regex_matches: RegexValidator,\n      required: RequiredValidator,\n      unique: UniqueValidator,\n      is_integer: IntegerValidator\n    }\n    if (!(definition.validate in mapping)) {\n      throw new Error(`Missing validator for ${definition.validate}`)\n    }\n    const FoundValidator = mapping[definition.validate]\n    return new FoundValidator(definition)\n  }\n}\n\nexport class IntegerValidator extends Validator {\n  isValid(fieldValue) {\n    return {\n      valid:\n        !isNaN(fieldValue) && fieldValue !== null && fieldValue !== undefined,\n      message: this.definition.error || 'This is not a valid number',\n      errorType: 'is_integer'\n    }\n  }\n}\n\nexport class UniqueValidator extends Validator {\n  constructor(definition) {\n    super(definition)\n    this.seen = {}\n  }\n\n  isValid(fieldValue) {\n    if (fieldValue in this.seen) {\n      return {\n        valid: false,\n        message: this.definition.error || 'This value is not unique',\n        errorType: 'unique'\n      }\n    }\n    this.seen[fieldValue] = true\n    return { valid: true }\n  }\n}\n\nfunction escapeStringRegExp(str) {\n  return str.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n}\n\nexport class RegexValidator extends Validator {\n  constructor(definition) {\n    super(definition)\n    if (typeof this.definition.regex === 'object') {\n      this.regexp = this.definition.regex\n    } else {\n      this.regexp = new RegExp(escapeStringRegExp(this.definition.regex))\n    }\n    this.seen = {}\n  }\n\n  isValid(fieldValue) {\n    const matches = this.regexp.test(fieldValue)\n    if (!matches) {\n      return {\n        valid: false,\n        message: \"This value is invalid\" || this.definition.error,\n        errorType: 'regex'\n      }\n    }\n    return { valid: true }\n  }\n}\n\nexport class RequiredValidator extends Validator {\n  isValid(fieldValue) {\n    if (!fieldValue) {\n      return {\n        valid: false,\n        message: this.definition.error || 'This value is required',\n        errorType: 'required'\n      }\n    }\n    return { valid: true }\n  }\n}\n\nexport class ValidationResult {\n  constructor() {\n    this.errorsByFieldKeyByRowIndex = {}\n  }\n\n  hasErrors() {\n    return (\n      Object.keys(this.errorsByFieldKeyByRowIndex).filter((fieldKey) => {\n        return Object.keys(this.errorsByFieldKeyByRowIndex[fieldKey]).length > 0\n      }).length > 0\n    )\n  }\n\n  rowIndexesWithErrors() {\n    let allRowIndexes = []\n    Object.keys(this.errorsByFieldKeyByRowIndex).forEach((fieldKey) => {\n      const rowIndexes = Object.keys(this.errorsByFieldKeyByRowIndex[fieldKey])\n      allRowIndexes = allRowIndexes.concat(\n        rowIndexes.map((r) => parseInt(r, 10))\n      )\n    })\n    return new Set(allRowIndexes)\n  }\n\n  addError(fieldKey, rowIndex, error) {\n    fieldKey = fieldKey.toString()\n    rowIndex = rowIndex.toString()\n    if (!(fieldKey in this.errorsByFieldKeyByRowIndex)) {\n      this.errorsByFieldKeyByRowIndex[fieldKey] = {}\n    }\n    if (!(rowIndex in this.errorsByFieldKeyByRowIndex[fieldKey])) {\n      this.errorsByFieldKeyByRowIndex[fieldKey][rowIndex] = []\n    }\n    this.errorsByFieldKeyByRowIndex[fieldKey][rowIndex].push(error)\n  }\n\n  hasError(fieldKey, rowIndex) {\n    fieldKey = fieldKey.toString()\n    rowIndex = rowIndex.toString()\n    return (\n      fieldKey in this.errorsByFieldKeyByRowIndex &&\n      rowIndex in this.errorsByFieldKeyByRowIndex[fieldKey]\n    )\n  }\n\n  getErrors(fieldKey, rowIndex) {\n    fieldKey = fieldKey.toString()\n    rowIndex = rowIndex.toString()\n    return this.errorsByFieldKeyByRowIndex[fieldKey][rowIndex]\n  }\n}\n\nexport const applyValidation = (formattedData, fields) => {\n  const validatorsByFieldKey = {}\n  fields.forEach((field) => {\n    validatorsByFieldKey[field.key] = []\n    if (!field.validators) {\n      return\n    }\n\n    field.validators.forEach((validatorDefinition) => {\n      validatorsByFieldKey[field.key].push(\n        Validator.buildFromDefinition(validatorDefinition)\n      )\n    })\n  })\n\n  const validationResult = new ValidationResult()\n  fields.forEach((field) => {\n    formattedData.forEach((row, rowIndex) => {\n      if (!(field.key in row)) {\n        return\n      }\n      const value = row[field.key]\n      const validators = validatorsByFieldKey[field.key]\n\n      validators.forEach((v) => {\n        const result = v.isValid(value)\n        if (!result.valid) {\n          validationResult.addError(field.key, rowIndex, result)\n        }\n      })\n    })\n  })\n  return validationResult\n}\n\nconst computeStatisticsForField = (\n  fieldKey,\n  formattedData,\n  errorsByRowIndex\n) => {\n  const errorTypeCounts = { total: 0 }\n  const counts = { isNull: 0 }\n  formattedData.forEach((d) => {\n    if (!d[fieldKey]) {\n      counts.isNull += 1\n    }\n  })\n\n  Object.keys(errorsByRowIndex).forEach((rowIndex) => {\n    const errors = errorsByRowIndex[rowIndex]\n    if (errors && errors.length > 0) {\n      errorTypeCounts.total += 1\n    }\n    errors.forEach((error) => {\n      if (error.errorType in errorTypeCounts) {\n        errorTypeCounts[error.errorType] += 1\n      } else {\n        errorTypeCounts[error.errorType] = 1\n      }\n    })\n  })\n  return { errorTypeCounts, counts }\n}\n\nexport const computeStatistics = (\n  formattedData,\n  headerMappings,\n  validationResult\n) => {\n  const statisticsByFieldKey = {}\n  const headers = Object.keys(headerMappings).map((k) => headerMappings[k])\n  headers.forEach((headerMapping) => {\n    if (!headerMapping.selectedField) {\n      return\n    }\n    const fieldKey = headerMapping.selectedField.value\n    statisticsByFieldKey[fieldKey] = computeStatisticsForField(\n      fieldKey,\n      formattedData,\n      validationResult.errorsByFieldKeyByRowIndex[fieldKey] || {}\n    )\n  })\n  return { statisticsByFieldKey, total: formattedData.length }\n}\n","import React, { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\nimport Header from './components/Header';\nimport FileUploader from './components/FileUploader';\nimport HeaderMapper from './components/HeaderMapper';\nimport DataEditor from './components/DataEditor';\nimport { fieldIsRequired } from './utils';\nimport { ThemeContext } from './contexts';\nimport { Root, Margin, Container } from './components/common'\nimport { applyValidation, computeStatistics, ValidationResult } from './validators';\nimport { formatData, buildSuggestedHeaderMappings, buildFinalData } from './utils';\n\nconst Importer = ({\n  theme,\n  onComplete,\n  fields,\n}) => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [parsed, setParsed] = useState(null);\n  const [formattedData, setFormattedData] = useState([]);\n  const [statistics, setStatistics] = useState({statisticsByFieldKey: {}, total: null});\n  const [headerMappings, setHeaderMappings] = useState({});\n  const [validationResult, setValidationResult] = useState(new ValidationResult());\n\n  const restart = () => {\n    setCurrentStep(0);\n    setParsed(null);\n    setFormattedData([]);\n    setStatistics({statisticsByFieldKey: {}, total: null});\n    setHeaderMappings({});\n    setValidationResult(new ValidationResult());\n  };\n\n  const setFile = (file) => {\n    Papa.parse(file, {\n      complete: (newParsed) => {\n        setParsed(newParsed);\n        setHeaderMappings(buildSuggestedHeaderMappings(fields, newParsed.data[0]));\n        setCurrentStep(1);\n      }\n    });\n  }\n\n  useEffect(() => {\n    // Generate all the statistics\n    if (parsed && parsed.data) {\n      const newFormattedData = formatData(headerMappings, parsed.data);\n      setFormattedData(newFormattedData);\n    }\n  }, [headerMappings]);\n\n  useEffect(() => {\n    if (formattedData.length > 0) {\n      const newValidationResult = applyValidation(formattedData, fields);\n      setValidationResult(newValidationResult);\n      const newStatistics = computeStatistics(formattedData, headerMappings, newValidationResult);\n      setStatistics(newStatistics);\n    }\n  }, [formattedData]);\n\n  const usedFilters = Object.keys(headerMappings)\n    .map(h => headerMappings[h])\n    .filter(h => !h.ignored && h.selectedField)\n    .map(h => h.selectedField.value);\n  const unselectedFields = fields.filter(filter => {\n    return usedFilters.indexOf(filter.key) < 0;\n  });\n\n  let rowData = [];\n  for (let i = 0; i < 100; i++) {\n    rowData.push({ rowIndex: i });\n  }\n\n  const headers = Object\n    .keys(headerMappings)\n    .map(h => headerMappings[h])\n    .filter(h => h.confirmed)\n    .map(h => h.selectedField.value);\n  const selectedFields = fields.filter(f => {\n    return headers.indexOf(f.key) >= 0;\n  });\n\n  const missingRequiredFields = fields.filter(f => fieldIsRequired(f)).filter(f => {\n    return selectedFields.map(f => f.key).indexOf(f.key) === -1;\n  });\n  return (\n    <ThemeContext.Provider>\n      <Root>\n        <Container>\n          <Header steps={['Upload', 'Match', 'Review', 'Complete']} currentStep={currentStep} />\n          {currentStep === 0 && (\n            <div>\n              <FileUploader setFile={setFile} />\n              <Margin margin=\"40px 0 10px 0\">\n                <h6>Or just manually enter your data</h6>\n              </Margin>\n              <DataEditor\n                statistics={statistics}\n                formattedData={formattedData.length > 0 ? formattedData : rowData}\n                fields={fields}\n                headerMappings={headerMappings}\n                validationResult={validationResult}\n                onSubmit={() => {\n                  onComplete(buildFinalData(formattedData, validationResult));\n                }}\n                setRowData={(row, index) => {\n                  const newRowData = [...rowData];\n                  newRowData[index] = row;\n                  setFormattedData(newRowData);\n                }}\n              />\n            </div>\n          )}\n          {currentStep === 1 && (\n            <HeaderMapper\n              statistics={statistics}\n              parsed={parsed}\n              fields={unselectedFields}\n              headerMappings={headerMappings}\n              missingRequiredFields={missingRequiredFields}\n              setHeaderMappings={setHeaderMappings}\n              restart={restart}\n              onComplete={() => {\n                setCurrentStep(2);\n              }}\n            />\n          )}\n          {currentStep === 2 && (\n            <DataEditor\n              statistics={statistics}\n              formattedData={formattedData}\n              fields={selectedFields}\n              headerMappings={headerMappings}\n              validationResult={validationResult}\n              onBack={() => {\n                setCurrentStep(1);\n              }}\n              onSubmit={() => {\n                onComplete(buildFinalData(formattedData, validationResult));\n              }}\n              setRowData={(row, index) => {\n                const newFormattedData = [...formattedData];\n                newFormattedData[index] = row;\n                setFormattedData(newFormattedData);\n              }}\n            />\n          )}\n        </Container>\n      </Root>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default Importer;","import React, { useState } from 'react';\nimport Importer from 'react-importer'\nimport { JsonEditor as Editor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport 'react-importer/dist/index.css'\n\nconst App = () => {\n  const [value, setValue] = useState(null);\n  const onComplete = (data) => {\n    setValue(data);\n  }\n  return (\n    <div style={{marginTop: '50px', marginBottom: '50px'}}>\n      <Importer\n        fields={[\n          {\n            label: \"Name\", key: \"name\", validators: [\n              { validate: \"required\" },\n            ]\n          },\n          {\n            label: \"Email\", key: \"email\", validators: [\n              { validate: \"required\" },\n              { validate: \"unique\", error: \"This email is not unique\" },\n              {\n                validate: \"regex_matches\",\n                regex: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n              },\n            ]\n          },\n          {\n            label: \"Phone Number\", key: \"phone_number\", validators: [\n              { validate: \"required\" },\n            ]\n          },\n          {\n            label: \"Street\", key: \"street\"\n          },\n          {\n            label: \"City\", key: \"city\"\n          },\n          {\n            label: \"State\", key: \"state\"\n          },\n        ]}\n        onComplete={onComplete}\n      />\n      {value && (\n        <div style={{ margin: \"0 auto\", maxWidth: \"1200px\" }}>\n          <h4>Output</h4>\n          <Editor\n            mode='code'\n            navigationBar={false}\n            statusBar={false}\n            mainMenuBar={false}\n            value={value}\n            onChange={v => setValue(v)}\n          />\n        </div>\n      )}\n    </div>\n  )\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}